{
  "title": "멍개의 연구소",
  "description": "깃허브: https://github.com/pjt3591oo",
  "link": "https://blog.naver.com/pjt3591oo?fromRss=true&trackingCode=rss",
  "lastBuildDate": "",
  "items": [
    {
      "title": "[서버] postman runner를 활용하여 부하 테스트하기",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 postman을 활용하여 부하테스트 하는 방법을 다뤄보겠습니다. 먼저, postman의 부하테스트는 runner 기반으로 동작합니다. 전에 postman에서 runner 활용방법을 소개한적이 있습니다. https://blog.naver.com/pjt3591oo/222633514486 postman의 runner는 3개의 기능으로 세분화됩니다. Functional: 기존의 Runner 기능입니다. 정해진 횟수와 딜레이를 이용하여 호출 Scheduled: 특정 시간에 호출 수행. 정해진 횟수와 딜레이를 이용하여 호출 Performance(load test): 가상 사용자를 생성하여 요청 수행 · Functional 반복 횟수와 요청당 대기시간을 설정할 수 있습니다. run loadtest 버튼을 누르면 다.......",
      "link": "https://blog.naver.com/pjt3591oo/223644966577?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223644966577",
      "pubDate": "Sun, 03 Nov 2024 14:24:45 +0900",
      "author": "pjt3591oo",
      "category": "서버"
    },
    {
      "title": "[DB] ORDER BY를 통해 랜덤 출력",
      "description": "안녕하세요 멍개입니다. 오늘은 MySQL이나 Postgresql와 같은 RDBMS에서 랜덤하게 출력하는 방법을 다뤄보겠습니다. ▶ MySQL ▶ Postgresql ORDER BY는 컬럼명과 값을 넣어줄 수 있습니다. 각 row는 rand()또는 random()를 통해 생성된 랜덤값에 따라 정렬을 하기 때문에 쿼리가 실행될 때마다 다르게 정렬이 이루어 집니다. 다음 링크는 mysql과 postgrsql 쿼리를 테스트 할 수 있는 온라인 플레이그라운드 입니다. ▶ mysql https://onecompiler.com/mysql/42wt65fkj ▶ postgresql https://onecompiler.com/postgresql/42wt6rz5u ● 주의할 점 램덤하게 조회할 때 주의할 점이 있습니다. · 풀스캔 ORDER BY rand(); 또는 ORDER BY random();은.......",
      "link": "https://blog.naver.com/pjt3591oo/223642572715?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223642572715",
      "pubDate": "Fri, 01 Nov 2024 13:46:14 +0900",
      "author": "pjt3591oo",
      "category": "DB"
    },
    {
      "title": "[node] inspect로 얻은 profile 정보 분석하기",
      "description": "안녕하세요 멍개입니다. 지난 시간에 node inspect를 이용하여 디버깅과 프로파일링하는 방법을 다뤄보았습니다. https://blog.naver.com/pjt3591oo/222914507873 이번 시간에는 프로파일링 결과로 얻은 cpu와 memory 정보를 분석하는 방법을 다룹니다. 그 전에 우리가 프로파일링할 코드는 다음과 같습니다. · CPU 분석 먼저, 프로파일 정보를 export합니다. 굳이 export를 하지 않아도 되는데 export를 한 후 보는것이 좀 더 깔끔한 수치를 볼 수 있습니다. 여기서 우라가 확인할 점은 file이라고 명시된 부분의 함수이름입니다. main, testcall0, testcall1입니다. 여기서 주의깊게 볼 점은 바로 self time과 total time입니다. testcall0과 t.......",
      "link": "https://blog.naver.com/pjt3591oo/223633990755?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223633990755",
      "pubDate": "Sat, 26 Oct 2024 07:35:23 +0900",
      "author": "pjt3591oo",
      "category": "node.js"
    },
    {
      "title": "[jetbrain] 무료 제공 툴 목록",
      "description": "안녕하세요 멍개입니다. jetbrain 회사에서 제공하는 툴들이 많은데 하나 둘 씩 무료로 공개하고 있습니다. 2024년 10월 24일 webstorm과 rider가 추가되어 총 4개의 툴을 무료로 이용할 수 있습니다. WebStorm: JavaScript와 TypeScript 개발을 위한 IDE Rider: .NET 및 게임(Unreal Engine, Unity, Godot, In-house), Native App 개발을 위한 IDE RustRover: Rust 개발을 위한 IDE Aqua: 테스트 자동화를 위한 IDE 하지만 무료로 이용하기 위한 조건으로 비상업용 목적이어야 합니다. https://blog.jetbrains.com/ko/blog/2024/10/24/webstorm-and-rider-are-now-free-for-non-commercial-use/ 저는 테스트를 위해 Aqua를 설치해보았습니다. to.......",
      "link": "https://blog.naver.com/pjt3591oo/223632872870?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223632872870",
      "pubDate": "Fri, 25 Oct 2024 11:05:48 +0900",
      "author": "pjt3591oo",
      "category": "컴퓨터, Tool"
    },
    {
      "title": "[운동] 2024년 10월 20일 운동근황",
      "description": "최근에 이사를 하고 홈짐을 만들었습니다. 이곳이 바로 멍개의 체육관 입니다 ㅋㅋㅋㅋ 해당 제품은 이고진 6822sm 입니다. 턱걸이 근황은 이러합니다 제 블로그를 오래전부터 보신분들은 아시겠지만 저는 러닝을 꾸준히 해왔습니다. 러닝을 한지 10년이 넘은것 같네요. 제 페이스는 이정도 나오는 것 같습니다. 10키로 기준으로는 5:30 정도 나오고 15키로는 6분 페이스를 기준으로 뜁니다. 이래야 호흡이 매우 안정적으로 유지가 되어 장거리 러닝이 가능합니다. 5:00 ~ 5:30은 10키로 까지는 가능한데 그 이상은 체력적으로 많이 후달리네요 (제가 러닝으로 20~30키로 감량에 성공한 케이스 입니다. 물론 100% 러닝만하진 않았지만....) 요즘.......",
      "link": "https://blog.naver.com/pjt3591oo/223625983234?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223625983234",
      "pubDate": "Sun, 20 Oct 2024 10:59:02 +0900",
      "author": "pjt3591oo",
      "category": "운동"
    },
    {
      "title": "[k8s] minikube 멀티노드 지원",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 minikube를 이용하여 클러스터 멀티 노드를 구축한 후 간단한 application을 배포해보도록 하겠습니다. · minikube multi node cluster 다음과 같이 3개의 노드로 구성된 클러스터를 확인할 수 있습니다. 각 노드는 컨테이너 기반으로 구동됩니다. · 어플리케이션 배포 간단하게 deployment와 service를 배포해보겠습니다. 먼저, deployment.yaml을 정의합니다. 그리고 deployment를 배포합니다. pods를 조회하면 다음과 같이 2개의 파드가 다른 노드에 배포된 모습을 확인할 수 잇습니다. 이제 서비스를 배포하여 외부에서 접속될 수 있도록 하겠습니다. 다음과 같이 service.yaml을 정의합니다. 이제.......",
      "link": "https://blog.naver.com/pjt3591oo/223625955411?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223625955411",
      "pubDate": "Sun, 20 Oct 2024 10:22:20 +0900",
      "author": "pjt3591oo",
      "category": "컨테이너 가상화"
    },
    {
      "title": "[OrbStack] Docker Desktop 대체제 OrbStack",
      "description": "안녕하세요 멍개입니다. 이번 포스트는 Docker Desktop을 대체할 수 있는 OrbStack을 소개합니다. OrbStack은 컨테이너 뿐 아니라 리눅스 가상머신을 관리할 수 있습니다. 또한 싱글 노드로 구성된 쿠버네티스 클러스터가 내장되어 있습니다. (Docker Desktop에서도 k8s 사용이 가능합니다) · 도메인 할당과 https OrbStack의 장점을 뽑자면 자동으로 도메인을 할당하여 https 사용이 가능하다는 점 입니다. 예를들어 다음과 같이 nginx 컨테이너를 띄운다고 가정하겠습니다. https://orb.local 접속 시 생성된 컨테이너와 가상머신 인스턴스 목록을 확인할 수 있습니다. OrbStack은 컨테이너와 인스턴스에게 도메인을 할당하여 https 사용이 가.......",
      "link": "https://blog.naver.com/pjt3591oo/223625913182?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223625913182",
      "pubDate": "Sun, 20 Oct 2024 09:20:26 +0900",
      "author": "pjt3591oo",
      "category": "컨테이너 가상화"
    },
    {
      "title": "[multipass] 가상화 도구 multipass",
      "description": "안녕하세요 멍개입니다. 오늘은 ubuntu 기반의 가상환경을 관리하는 도구인 multipass를 다뤄봅니다. · 설치 multipass는 공식홈페이지를 통해 다운받을 수 있습니다. https://multipass.run/install 맥, 리눅스 환경에서 다음과 같이 설치할 수 있습니다. ● multipass로 가상머신 다루기 · 가상머신 생성 가능 이미지 목록 multipass는 Canonical가 만들었기 때문에 ubuntu 환경만 지원합니다. Canonical는 ubuntu 보급을 위해 2004년에 설립된 회사입니다. · 가상머신 인스턴스 생성 launch 명령어를 통해 가상머신을 생성할 수 있습니다. cpus, disk, memory 옵션을 통해 자원할당을 할 수 있습니다. name 옵션을 통해 가상머신 이름을 지정.......",
      "link": "https://blog.naver.com/pjt3591oo/223625883705?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223625883705",
      "pubDate": "Sun, 20 Oct 2024 08:29:30 +0900",
      "author": "pjt3591oo",
      "category": "컨테이너 가상화"
    },
    {
      "title": "[LLM] transformer 모델을 만들어보고 있다.",
      "description": "https://github.com/pjt3591oo/book-llm-application/tree/main/transformer",
      "link": "https://blog.naver.com/pjt3591oo/223607692490?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223607692490",
      "pubDate": "Sat, 05 Oct 2024 11:59:42 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[pytorch] pytorch 샘플코드",
      "description": "https://github.com/pjt3591oo/book-llm-application/tree/main/pytorch-tutor",
      "link": "https://blog.naver.com/pjt3591oo/223602931186?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223602931186",
      "pubDate": "Tue, 01 Oct 2024 11:42:46 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[LLM] LLM을 활용한 실전 AI 애플리케이션 개발",
      "description": "안녕하세요 멍개입니다. 요즘 블로그 포스팅이 좀 뜸한데 그 이유는 &quot;LLM을 활용한 실전 AI 애플리케이션 개발&quot; 책을 읽고 있어서 그렇습니다 ㅋㅋ(추가로 아직 학생인지라 수업과 과제하느라 정신이 좀 없었네요 ㅋㅋ) 책은 아직 절반도 못 읽었습니다 ㅠㅠ ● Ch1 LLM의 기초 뼈대 세우기 ● Ch2 LLM의 중추 트랜스포머 아키텍처 살펴보기 여기까지는 책의 내용을 정리한 부분입니다. 2장에서는 트랜스포머의 인코더와 디코더를 구현하는 코드를 제공합니다. ▶ 인코더 https://github.com/pjt3591oo/book-llm-application/blob/main/ch2/2.12.py ▶ 디코더 https://github.com/pjt3591oo/book-llm-application/blob/main/ch2/2.15.p.......",
      "link": "https://blog.naver.com/pjt3591oo/223602847672?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223602847672",
      "pubDate": "Tue, 01 Oct 2024 10:05:48 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "구글 검색에 첫 페이지 나옴",
      "description": "와 일하다가 아무생각 없이 구글에 멍개 검색했는데 첫 페이지 두 번째에 나오네 ㅋㅋㅋㅋㅋㅋ 멍게를 다 뚫고 올라오다니 신기하군 신기해서 일하다가 포스팅해봄 ㅋㅋㅋㅋ",
      "link": "https://blog.naver.com/pjt3591oo/223594772048?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223594772048",
      "pubDate": "Tue, 24 Sep 2024 16:12:43 +0900",
      "author": "pjt3591oo",
      "category": "일상..."
    },
    {
      "title": "[chroma] vector database chroma를 알아보자",
      "description": "안녕하세요 멍개입니다. 이번 시간은 vector database인 chroma를 알아보겠습니다. vector database란 벡터값을 저장할 수 있는 데이터베이스를 의미합니다. vector 데이터는 숫자나 문자열처럼 특수한 연산을 제공합니다. 숫자의 경우는 덧셈, 뻴셈 계산 등의 연산을 지원 문자열의 경우 자르고 붙이고 등의 연산을 지원 벡터의 경우 유사도 계산 등의 연산을 지원 유사도를 계산하는 방법이 궁금하다면 다음 포스팅을 참고하시기 바랍니다. https://blog.naver.com/pjt3591oo/221913081091 우리는 텍스트 또는 이미지 등의 데이터를 벡터(숫자로 표현된 리스트)로 저장하여 여러 연산을 할 수 있습니다. 여려 형태의 데이터를 벡터로 변환하는.......",
      "link": "https://blog.naver.com/pjt3591oo/223590941645?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223590941645",
      "pubDate": "Sat, 21 Sep 2024 11:19:24 +0900",
      "author": "pjt3591oo",
      "category": "DB"
    },
    {
      "title": "[aptos] aptos 2.5편 - account는 모듈이다 그리고 sequence number 신경쓰기",
      "description": "안녕하세요 멍개입니다. 이번 시간은 aptos의 account는 모듈이라는 주제를 가지고 account 사용시 주의할 점을 알아보려고 합니다. 혹시 2편의 수수료 대리지불(sponsor)를 보지 않았다면 보고와주세요. https://blog.naver.com/pjt3591oo/223575487054 2편에서 client, server 모델에서 트랜잭션 스폰서를 수행하기 위해 트랜잭션을 만드는 과정에서 sequenceNumber를 직접 조회하여 넣어주었습니다. 본 편에서는 sequenceNumber를 조회하여 넣어준 이유를 살펴봅니다. 2편에서는 APT 전송에 대해 수수료 대리지불을 수행하기 위해 다음과 같이 테스트용 APT를 받는 코드를 수행한 후 APT 전송 트랜잭션을 생성하였습니다. fundAccount 호출 시.......",
      "link": "https://blog.naver.com/pjt3591oo/223587232170?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223587232170",
      "pubDate": "Wed, 18 Sep 2024 07:50:36 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[LLM] 허깅페이스를 이용하여 카카오톡 대화 감정분석하기",
      "description": "안녕하세요 멍개입니다. 이번 시간은 허깅페이스에 공개된 감정분류 모델을 이용하여 제가 참여하고 있는 카카오톡 대화내용을 분석해보겠습니다. 카카오톡 대화내용 감정 분석을 하기위한 플로우는 다음과 같습니다. [데이터 준비] 카카오톡 대화내용 내보내기 [데이터 전처리] 의미없는 데이터 날리기 봇 대화 삭제된 메시지 사진 이모티콘 모델 준비 모델기반 추론 · 데이터 준비 - 카카오톡 대화내용 내보내기 CSV 형태로 대화내용을 추출합니다. · 데이터 전처리 - 의미없는 데이터 날리기 특정 행위에 대해서 동작하는 봇 또는 삭제된 메시지, 사진, 이모티콘은 의미가 없으므로 필터링 대상이 됩니다. · 모델 준비 hun3359/klue-bert-base.......",
      "link": "https://blog.naver.com/pjt3591oo/223586528743?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223586528743",
      "pubDate": "Tue, 17 Sep 2024 10:54:54 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[aptos] aptos 3편 - 여러 트랜잭션을 한 번에 submit(batch)",
      "description": "안녕하세요 멍개입니다. aptos를 typescript에서 사용할 수 있도록 만들어진 SDK가 @aptos-labs/ts-sdk입니다. ts-sdk는 여러 트랜잭션을 한 번의 submit 할 수 있도록 batch 기능을 제공합니다. 해당 코드를 실행하면 다음과 같이 로그가 출력되는 모습을 확인할 수 있습니다. TransactionWorkerEventsEnum으로 5가지 이벤트를 처리할 수 있습니다. · 중간에 실패된 트랜잭션 넣기 배치로 발생한 트랜잭션 중 실패된 트랜잭션이 존재하더라도 실패된 트랜잭션 뒤에 존재하는 트랜잭션들도 순차적으로 실행됩니다. batch는 aptos에서 제공하는 것이 아닌 SDK 수준에서 제공하는 기능이기 때문에 그렇습니다. test가 호출되면 항상 assert에서 트.......",
      "link": "https://blog.naver.com/pjt3591oo/223576549352?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223576549352",
      "pubDate": "Sun, 08 Sep 2024 14:12:05 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[aptos] aptos 2편 - 수수료 대리지불(sponsor)",
      "description": "안녕하세요. 멍개입니다. 지난 시간에는 aptos 모듈을 만들어 배포해보며, aptos가 왜 빠른지 다뤄보았습니다. 이번 시간은 수수료 대리지불인 sponsor를 알아보겠습니다. ● 수수료 대리지불 - sponsor aptos는 수수료를 타인이 대신 지불할 수 있습니다. 이더리움에서는 수수료를 대리지불하기 위해 ERC4337과 같은 프로토콜을 구현한 수 AA bundler, AA Paymaster와 같은 추가적인 오프체인 시스템이 구축되어야 합니다. 하지만 aptos는 네이티브 수준에서 수수료 대리지불이 가능합니다. 그렇다고해서 ERC4337과 AA Paymaster가 꼭 단점만 있는건 아닙니다. aptos의 경우는 수수료를 만드시 APT인 네이티브 코인으로만 사용됩니다. 즉, 다른.......",
      "link": "https://blog.naver.com/pjt3591oo/223575487054?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223575487054",
      "pubDate": "Sat, 07 Sep 2024 11:19:30 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[일상] 소개팅을 하다",
      "description": "오늘 소개팅을 하였다 결과. 까였다 생각보다 멘탈이 매우 불안정하다 빨리 집가서 운동해야겠다",
      "link": "https://blog.naver.com/pjt3591oo/223551833674?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223551833674",
      "pubDate": "Sun, 18 Aug 2024 14:32:40 +0900",
      "author": "pjt3591oo",
      "category": "일상..."
    },
    {
      "title": "[aptos] aptos 1편 - 나만의 모듈(smart contract) 만들고 배포하기 and aptos 트랜잭션 처리 속도가 빠른 이유",
      "description": "안녕하세요 멍개입니다. 이번 포스트부터 aptos를 다뤄보려고 합니다. aptos는 move 언어를 통해 스마트 컨트랙트를 만들 수 있습니다. aptos는 스마트 컨트랙트를 모듈 단위로 관리합니다. 이더리움의 경우 하나의 account는 하나의 스마트 컨트랙트가 되는데 aptos는 그렇지 않습니다. 하나의 account는 여러 모듈(as smart contract)을 가지고 있을 수 있습니다. 모듈의 구조는 solana의 PA와 PDA와 유사합니다. aptos 모듈(as smart contract)를 잘 이해하기 위해선 multi agent, object, resource, aggregator와 같은 개념을 이해해야 더 잘 이해할 수 있습니다. 이러한 개념들은 추후에 하나씩 알아가보도록 하겠습니다. 이번편에서는 모듈.......",
      "link": "https://blog.naver.com/pjt3591oo/223551671021?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223551671021",
      "pubDate": "Sun, 18 Aug 2024 11:05:08 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[farcaster] 탈중앙화 소셜 네트워크 프로토콜3편 - 로컬 환경에서 hubble 구축 / offchain 살펴보기",
      "description": "안녕하세요 멍개입니다. 2편에서 onchain에 farcaster 컨트랙트를 배포한 후 FID를 발급받고 transfer, recovery와 같은 interaction을 다뤄보았습니다. 3편에서는 소셜 활동 메시지를 발행하기 위해 offchain 데이터가 저장되는 저장소인 hubble을 구축하고 2편에서 등록한 키를 이용하여 소셜 메시지(cast 발생, 팔로워, 좋아요, 공유, 인용) 발행하는 방법을 다룹니다. ● hubble 구축 hubble은 farcaster에서 offchain 데이터가 저장되는 컴포넌트입니다. offchain 데이터란 소셜 서비스에서 활동하는 모든 데이터를 의미합니다. 게시글이라 불리는 cast, 친구 기능인 팔로워, 게시글의 좋아요, 공유, 댓글, 인용 등을 의미합니다. · 소스코.......",
      "link": "https://blog.naver.com/pjt3591oo/223543125614?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223543125614",
      "pubDate": "Sat, 10 Aug 2024 14:31:34 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[farcaster] 탈중앙화 소셜 네트워크 프로토콜2편 - 로컬 환경에서 farcaster 구축 / onchain 살펴보기",
      "description": "안녕하세요 멍개입니다. 지난시간에 farcaster가 무엇이고 onchain에서 배포되는 컨트랙트를 살펴보았습니다. https://blog.naver.com/pjt3591oo/223542921653 이번 시간은 farcaster를 로컬 환경에 배포하고 앞에서 다뤘던 컨트랙트를 통해 직접 FID를 발행하고 ED25519 기반의 키를 등록하는 방법을 살펴보겠습니다. ● farcaster 배포 본 포스트에서는 anvil로 로컬 환경에 테스트 노드를 구축 후 farcaster 컨트랙트를 배포하여 진행합니다. · 블록체인 노드 구축 노드 구축을 위해 anvil을 이용합니다. anvil은 메인넷 특정 블록을 포크하여 테스트 네트워크를 구축할 수 있습니다. 먼저, 메인넷 포크를 위해 L2의 메인넷 RPC URL을 alchemy.......",
      "link": "https://blog.naver.com/pjt3591oo/223543025751?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223543025751",
      "pubDate": "Sat, 10 Aug 2024 12:22:42 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[farcaster] 탈중앙화 소셜 네트워크 프로토콜1편 - 구조와 컨트랙트 이해",
      "description": "안녕하세요 멍개입니다. 이번 시간은 이더리움에서 제공하는 탈중앙화 소셜 네트워크 프로토콜인 파캐스터(farcaster)를 다뤄보고자 합니다. 정확히는 이더리움과 이더리움 기반의 L2 네트워크인 옵티미즘(optimism)에서 제공합니다. farcaster 기반의 소셜 네트워크 서비스로 대표적인 앱으로 워프캐스트(warpcast)가 있습니다. 1편에서는 farcaster의 구조와 컨트랙트를 살펴봅니다. ● 구조 farcaster는 L1(이더리움)과 L2(옵티미즘) 네트워크를 기반으로 동작합니다. 또한 블록체인에 저장되는 온체인 데이터와 일반적인 데이터베이스에 저장되는 오프체인 데이터를 활용합니다. · onchain 탈중앙화에선 onchain이 의미하는 건 블록체인에 저.......",
      "link": "https://blog.naver.com/pjt3591oo/223542921653?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223542921653",
      "pubDate": "Sat, 10 Aug 2024 10:02:34 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[일상] 두 번째 집 삼",
      "description": "안녕하세요 멍개입니다. 요즘 정비하는게 좀 뜸했는데 집 산다고 정신이 없어서 공부한 내용을 정리하지 못했네요. 첫 집을 2020년 3월에 장만했으니 52개월만에 두 번쨰 집을 장만했습니다. https://blog.naver.com/pjt3591oo/221861409892 첫 집은 25평형이고, 두 번째는 30평형 입니다. 이번에 취득세 공부 한다고 지방세 법령 빡세게 보았습니다. 거실 부엌 안방 &amp; 드레스룸 책상 직접 조립하는데 1시간 정도 걸린듯 ㅋㅋㅋ 복도 &amp; 방2, 방3 방 하나는 운동방이 될 예정이고 남은 방 하나는 일단 비어둘 에정입니다. 그냥 비워두기 그래서 빨래 건조대 두었습니다 ㅋㅋ",
      "link": "https://blog.naver.com/pjt3591oo/223536240702?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223536240702",
      "pubDate": "Sun, 04 Aug 2024 19:37:03 +0900",
      "author": "pjt3591oo",
      "category": "일상..."
    },
    {
      "title": "[서버] 부하 테스트 도구 k6 그리고 시각화",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 golang으로 구현된 부하테스트 도구인 k6를 이용하여 influxdb와 grafana를 이용하여 시각화를 해보곘습니다. · 샘플 서버 서버 테스트를 위해 가볍게 심플한 서버를 띄워보겠습니다. 다음과 같이 package.json을 수정합니다. 서버 코드는 다음과 같습니다. ● k6 k6는 grafana에서 만든 golang 기반 부하 테스트 도구입니다. 내부적으로 golang으로 구현되었지만 동작 코드는 javascript로 작성합니다. 내부적으론 golang에서 동작하기 때문에 javascript에서 사용하던 라이브러리들은 사용이 불가능합니다. 하지만 golang 기반으로 작성된 extension을 이용하여 k6의 기능을 확장할 수 있습니다. 이.......",
      "link": "https://blog.naver.com/pjt3591oo/223504483449?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223504483449",
      "pubDate": "Sun, 07 Jul 2024 19:19:47 +0900",
      "author": "pjt3591oo",
      "category": "서버"
    },
    {
      "title": "[운동] 2024년 06월 23일 풀업근황",
      "description": "힘들어요~",
      "link": "https://blog.naver.com/pjt3591oo/223488631117?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223488631117",
      "pubDate": "Sun, 23 Jun 2024 18:04:19 +0900",
      "author": "pjt3591oo",
      "category": "운동"
    },
    {
      "title": "[LLM] 내 블로그를 기반으로 RAG를 테스트해보았다.",
      "description": "RAG의 구조는 다음과 같습니다 가장먼저, 블로그 포스트의 고유값인 log_no를 수집합니다. 두 번째로 각 페이지를 임베딩하여 결과를 chroma에 저장합니다. 포스트에 필요없는 정보들을 제거하지 않고 페이지의 모든내용을 임베딩했습니다. 약 1,500개의 포스팅 정보를 embedding 했습니다. 마지막으로 RAG를 기반으로 LLM을 사용해보았습니다. https://github.com/pjt3591oo/blog-rag/blob/main/README.md 간단하게 RAG를 다뤄보았으니 조만간 이를 주제로 포스팅을 할 예정~",
      "link": "https://blog.naver.com/pjt3591oo/223488496770?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223488496770",
      "pubDate": "Sun, 23 Jun 2024 14:52:06 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[solidity] solidity storage layout 이해하기",
      "description": "안녕하세요 멍개입니다. 이번 시간은 스마트 컨트랙트에서 변수들이 스택공간에 어떻게 저장되는지 알아보는 시간을 가지겠습니다. 더 정확히는 스마트 컨트랙트에서 관리되는 데이터(변수)가 어떤 구조로 storage에 저장되는지 다뤄보겠습니다. 여기서는 ethers 버전을 6.x를 사용합니다. ● storage layout 구조 solidity는 다음과 같은 데이터 타입을 지원합니다. primitive type: boolean, integer, address dynamic type: struct, string, bytes, array, mapping primitive 타입의 경우는 한 슬롯당 32byte(256 bit)씩 묶여서 관리됩니다. dynamic 타입은 해당 슬롯에는 길이가 저장되고 실제 값은 별도의 슬롯이 생성되어 저장됩니다. Coun.......",
      "link": "https://blog.naver.com/pjt3591oo/223488345638?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223488345638",
      "pubDate": "Sun, 23 Jun 2024 10:50:13 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[hyperledger besu] clique(POA) 기반의 private network 구성하기",
      "description": "안녕하세요 멍개입니다. 이번 시간은hyperledger besu로 clique(POA) 기반의 private network 구축하는 방법을 알아보겠습니다. hyperledger besu는 자바로 만들어진 이더리움 클라이언트 프로그램이며 public, private 구축이 가능합니다. 또한 private 네트워크 구축을 위한 3개의 합의알고리즘을 제공하고 있습니다. clique(POA) QBFT IBFT2.0 이번 시간은 clique(POA) 기반으로 구축하는 방법을 다룹니다. hyperledger besu 및 clique의 특징은 다음과 같습니다. 빈 블록은 생성하지 않음 가스비 무료 설정 가능 runtime 환경시 signer 추가/제거 가능 ● 네트워크 구성 이번 포스트에서는 4개의 노드로 구성된 네트워크를 구축합니다. · 디.......",
      "link": "https://blog.naver.com/pjt3591oo/223480832962?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223480832962",
      "pubDate": "Sun, 16 Jun 2024 08:50:11 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[optimism] 자산 이동을 위한 브릿지(bridge) 3편 v1.7.3 - optimismSDK",
      "description": "안녕하세요 멍개입니다. 지난 시간에 1편과 2편을 통해 deposit/withdraw가 어떻게 이루어 지는지 살펴보았습니다. https://blog.naver.com/pjt3591oo/223437885654 https://blog.naver.com/pjt3591oo/223443304032 입금 / 출금을 위해 트랜잭션을 발생합니다. 출금의 경우 트랜잭션이 실패되더라도 동일한 트랜잭션을 다시 실행하면 됩니다.(일반적으로 gas에 따라 실패될 수 있습니다) 하지만 입금의 경우 L1에서 트랜잭션이 정상적으로 실행되고 L2에서 파생된 트랜잭션은 실패할 수 있습니다. 이때는 해당 트랜잭션을 다시 발생해야 합니다. 참고로 L2에서 파생된 트랜잭션은 시스템 트랜잭션으로 트랜잭션 타입이 126입니다. 이번 포스트에.......",
      "link": "https://blog.naver.com/pjt3591oo/223472672258?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223472672258",
      "pubDate": "Sat, 08 Jun 2024 10:32:10 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solidity] try/catch를 통해 에러 핸들링 하기 + 디버깅",
      "description": "안녕하세요 멍개입니다. 지난 시간에 임의로 에러를 내는 방법을 다뤄봤습니다. 이번 시간은 에러가 발생할 때 해당 exception을 처리하는 기법과 이를 raw level에서 어떻게 디버깅을 해야하는지 다룹니다. https://blog.naver.com/pjt3591oo/222526100483 이번편은 컨트랙트를 분석하는데 있어 매우 중요합니다. 지난 시간에 optimism bridge를 다루면서 컨트랙트가 어떤식으로 호출이 되는지 다뤘습니다. https://blog.naver.com/pjt3591oo/223437885654 https://blog.naver.com/pjt3591oo/223443304032 이때 단일 컨트랙트가 아닌 여러 컨트랙트가 상호작용을 하면서 서로 호출이 되는 모습을 확인할 수 있었습니다. 즉, 규모가 있는 프로젝.......",
      "link": "https://blog.naver.com/pjt3591oo/223470666093?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223470666093",
      "pubDate": "Thu, 06 Jun 2024 09:35:22 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[ethereum] EOA가 대신 서명하는 컨트랙트를 위한 서명 verification 표준",
      "description": "안녕하세요 멍개입니다. 지난 시간에 서명을 위한 데이터 포맷을 정의하는 표준인 EIP-191, EIP-712를 알아보았습니다. https://blog.naver.com/pjt3591oo/223457982893 이번 시간은 ERC-4337과 같은 contract wallet에서 서명 검증을 위한 표준을 살펴보겠습니다. 우선 제 블로그에선 계정 추상화(account abstract)를 다룬적이 없습니다. 해당 내용은 추후에 다뤄보겠습니다. 본문에서 개인키(privatekey)는 PK로 명시합니다. · EOA와 CA 먼저 EIP-1271을 이해하기 위해선 이더리움의 계정 타입을 살펴보아야 합니다. 이더리움은 PK로 계정을 관리하는 EOA(external owner accout)와 코드 레벨에서 관리되는 CA(contract account)로 구분됩니다.......",
      "link": "https://blog.naver.com/pjt3591oo/223466237378?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223466237378",
      "pubDate": "Sun, 02 Jun 2024 09:14:59 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[ethereum] 서명 데이터 포맷 - EIP191, EIP712",
      "description": "안녕하세요 멍개입니다. · 서명이란? 블록체인 시스템은 트랜잭션이라 불리우는 메시지를 전달받으면 실행을 하게 됩니다. 하지만 해당 메시지가 악의적인지 그렇지 않은지 판단하기 위해 우리는 서명이라는 내용을 메시지에 추가합니다. 서명은 메시지를 보내려고 하는 사람만 알고있는 개인키를 이용하여 안전한 수학적 알고리즘으로 서명값을 생성하여 보내려고 하는 데이터와 함께 전송합니다. 원래 보내려고 하는 데이터에는 누가 만들었는지 만든사람의 정보가 포함되고 개인키와 만든사람 정보는 한 쌍을 이루게 됩니다. 이를 공개키, 개인키라고 표현합니다. 블록체인에서 공개키의 역할을 하는것이 주소 입니다. 인터넷으로 들어간 서명.......",
      "link": "https://blog.naver.com/pjt3591oo/223457982893?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223457982893",
      "pubDate": "Sat, 25 May 2024 13:38:30 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solidity] openzeppelin을 이용하여 안전한 컨트랙트 만들기",
      "description": "안녕하세요 멍개입니다. 이번 시간은 안전한 컨트랙트를 만들기 위해 고려해야 할 2가지 사항을 다룹니다. 초기화(Initializable) 접근제어(Ownable, AccessControll) openzeppelin에서는 Initializable, ownable, AccessControll을 제공합니다. ● 초기화 - Initializable Initializable은 최초 한 번의 초기화 함수가 호출되는 것을 보장합니다. · 생성자 이용 앞의 코드는 생성자에 의해서 initialize가 호출되고 있습니다. 해당 컨트랙트가 배포된 이후 initialize 함수는 호출이 되어도 revert가 발생합니다. 여기서 initialize 함수를 호출해보겠습니다. initialize 함수는 이미 생성자에서 호출이 되었기 때문에 revert가 발생하게 됩니다.......",
      "link": "https://blog.naver.com/pjt3591oo/223447277286?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223447277286",
      "pubDate": "Wed, 15 May 2024 11:13:48 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[서버] 한국 ISP vercel.app DNS 차단",
      "description": "오늘 이곳저곳에서 vercel 접속 안되어서 난리인듯하다 참고로 난리인 회사중에 우리회사도 있다... https://github.com/orgs/vercel/discussions/6807",
      "link": "https://blog.naver.com/pjt3591oo/223443669667?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223443669667",
      "pubDate": "Sat, 11 May 2024 21:12:59 +0900",
      "author": "pjt3591oo",
      "category": "서버"
    },
    {
      "title": "[optimism] 자산 이동을 위한 브릿지(bridge) 2편 v1.7.3",
      "description": "안녕하세요 멍개입니다. 지난 시간에 L2의 자산을 L1으로 옮기는 입금 브릿지를 다뤘습니다. https://blog.naver.com/pjt3591oo/223437885654 이번 시간은 L2의 자산을 L1으로 옮기는 출금 브릿지를 다뤄보겠습니다. 참고로 1.7.3은 bedrock 버전입니다. ● 구조 &amp; Flow 출금 브릿지는 입금 브릿지보다 구조적으로 조금 더 복잡합니다. 다음은 출금 브릿지를 가장 잘 설명해주는 플로우 차트입니다. 해당 플로우를 잘 이해하기 위해서는 출금 브릿지 플로우를 이해하기 위해서는 optimism의 구성요소인 op-proposer의 동작을 이해해야 합니다. 가장 우측에 표기된 Proposer은 L2 구동을 위해 동작되는 op-proposer이며 L2OutputOracle은 L2의.......",
      "link": "https://blog.naver.com/pjt3591oo/223443304032?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223443304032",
      "pubDate": "Sat, 11 May 2024 12:23:36 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[공유] KAIST 류석영 교수, 고려대와 자바스크립트 생태계의 안정성 보장할 수 있는 기술 개발 성공",
      "description": "KAIST 류석영 교수, 고려대와 자바스크립트 생태계의 안정성 보장할 수 있는 기술 개발 성공 https://www.aitimes.kr/news/articleView.html?idxno=31089",
      "link": "https://blog.naver.com/pjt3591oo/223442049374?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223442049374",
      "pubDate": "Fri, 10 May 2024 07:20:21 +0900",
      "author": "pjt3591oo",
      "category": "Javascript"
    },
    {
      "title": "[optimism] 자산 이동을 위한 브릿지(bridge) 1편 v1.7.3",
      "description": "안녕하세요 멍개입니다. 브릿지(bridge)란 L1과 L2간의 자산(ETH, ERC20)을 이동하는 것을 의미합니다. L1에서 L2로 자산이동하는 것을 입금(deposit)이라고 부르며 L2에서 L1으로 자산이동하는 것을 출금(withdraw)라고 합니다. 이번 시간은 optimism의 브릿지 중 입금(deposit)을 알아보겠습니다. ● 입금(deposit) 입금은 L1의 ETH 또는 ERC20을 L2로 이동하는 것을 의미합니다. · deposit 구조 deposit을 이해하기 위해서는 deposit의 구조를 이해해야 합니다. 다음 구조는 optimism 공식문서에서 가이드 되는 구조입니다. 좌측은 L1에 배포된 큰트랙트 입니다. 우측은 L2에 배포된 컨트랙트 입니다. L1CrossDmainMessenger는 CrossDomainMes.......",
      "link": "https://blog.naver.com/pjt3591oo/223437885654?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223437885654",
      "pubDate": "Mon, 06 May 2024 15:14:42 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[optimism] op-batcher의 2가지 타입 calldata와 blobs v1.7.3",
      "description": "안녕하세요 멍개입니다. 지난 시간에 optimism(v1.73)을 이용하여 L2 네트워크를 구축하고 L2가 어떻게 동작하는지 살펴보았습니다. https://blog.naver.com/pjt3591oo/223432855140 https://blog.naver.com/pjt3591oo/223433007148 ● op-batcher 동작 형태 op-batcher는 2가지 형태로 동작합니다. calldata blobs · calldata calldata는 별다른 옵션을 주지 않으면 기본값으로 사용됩니다. 또는 다음과 같이 명시적으로 표현할 수 있습니다 calldata는 @blocktorch/optimism-batch-decoder 라이브러리를 이용하여 디코딩할 수 있습니다. 여기서 frames는 channel frame을 의미합니다. 앞선 포스팅에서 우리는 batcher가 어떻게 인코딩하는지 살.......",
      "link": "https://blog.naver.com/pjt3591oo/223436004021?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223436004021",
      "pubDate": "Sat, 04 May 2024 09:33:06 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[optimism] 블록과 트랜잭션 라이프사이클 v1.7.3",
      "description": "안녕하세요 멍개입니다. 지난 시간에 optimism으로 L2 기반의 네트워크를 구축하는 방법을 다뤄보았습니다. https://blog.naver.com/pjt3591oo/223432855140 이번 시간은 지난시간에 구축한 네트워크가 블록과 트랜잭션 관점에서 어떻게 동작하는지 알아보도록 하겠습니다. L2의 아키텍처는 다음과 같습니다. 해당 아키텍처를 좀 더 자세히 표현해보겠습니다. ● 트랜잭션 발생: unsafe block 생성 지갑과 같은 dapp에 의해서 트랜잭션이 발생할 수 있습니다. 이때 트랜잭션은 replica의 op-geth 또는 sequencer의 op-geth로 발생될 수 있습니다. · 클라이언트가 sequencer의 op-geth로 트랜잭션을 발생한 경우 L2는 크게 2가지 형태의 트랜잭션.......",
      "link": "https://blog.naver.com/pjt3591oo/223433007148?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223433007148",
      "pubDate": "Wed, 01 May 2024 15:39:49 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[optimism] optimism v1.7.3 시작하기",
      "description": "안녕하세요 멍개입니다. 오늘부터 optimism 관련된 포스팅을 진행하고자 합니다. 본 포스팅은 다음 2개의 가이드를 기본으로 따릅니다. https://docs.optimism.io/builders/chain-operators/tutorials/create-l2-rollup https://docs.optimism.io/builders/chain-operators/management/operations 해당 가이드에는 몇 가지 문제점이 있습니다. 첫 번째. 가이드를 위한 tutorial 브랜치에서 동작하기 때문에 정식 버전의 브랜치와 호환되지 않습니다. 이때 중요한 문제가 설정 파일 및 실행 옵션 등의 변경으로 삽질을 매우 많이 했습니다. 두 번째. optimism은 기본적으로 여러 컴포넌트들과 연결이 매우 중요합니다. 각 컴포넌트들을 실행할 때.......",
      "link": "https://blog.naver.com/pjt3591oo/223432855140?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223432855140",
      "pubDate": "Wed, 01 May 2024 12:46:41 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[optimism] v1.7.3 사용시 고려사항",
      "description": "안녕하세요 멍개입니다. 요즘 optimism 기반으로 프로젝트를 진행하고 있습니다. v1.7.3을 이용하고 있으며 참고할 수 있는 자료는 문서밖에 없는데 문서는 튜토리얼 버전 기반으로 작성되었기 때문에 기타 다른 버전과 호환되지 않는 이슈가 있습니다. 이러한 이슈로 여럿 고통받는 분들이 계십니다 ㅋㅋ https://github.com/ethereum-optimism/optimism/issues/9773 먼저 삽질해본 입장으로 답변을 달아주었습니다. https://github.com/ethereum-optimism/optimism/issues/9773#issuecomment-2056103467 https://github.com/ethereum-optimism/optimism/issues/9773#issuecomment-2080224969 optimism 관련해서는 조만간 정리할 예정입니다. 기.......",
      "link": "https://blog.naver.com/pjt3591oo/223428831254?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223428831254",
      "pubDate": "Sat, 27 Apr 2024 12:32:49 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solana] 표준토큰 SPL token로 알아보는 솔라나 프로그램 구조 심화편",
      "description": "안녕하세요 멍개입니다. 지난 시간에 이어 솔라나의 SOL token을 좀 더 딥하게 다뤄보도록 하겠습니다. 먼저 SPL token의 기초적인 내용을 모른다면 지난시간에 작성한 포스트를 보고오는 것을 권장합니다. https://blog.naver.com/pjt3591oo/223411225439 해당 포스트에서 확실히 알고 넘어가야 하는 부분은 바로 토큰 아키텍처 입니다. 이번시간에 깊게 다룰 부분은 바로 보라색으로 표시된 ATA 입니다. ATA를 좀 더 디테일하게 표현하면 다음과 같이 표현할 수 있습니다. 먼저 한 유저는 발행된 한 토큰에 대해서 여러 token account를 보유할 수 있습니다. 이런 구조는 다음과 같이 이해할 수 있습니다. 발행된 토큰을 하나의 은행이라고 가.......",
      "link": "https://blog.naver.com/pjt3591oo/223414170784?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223414170784",
      "pubDate": "Sat, 13 Apr 2024 10:19:33 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solana] 표준토큰 SPL token로 알아보는 솔라나 프로그램 구조 기초편",
      "description": "안녕하세요 멍개입니다. 이번 시간은 솔라나 표준 토큰인 SPL token을 다뤄보도록 하겠습니다. 솔라나의 토큰은 ERC20과 완전히 다른 구조를 가집니다. 이더리움은 스마트 컨트랙트라고 부르지만 솔라나는 프로그램이라고 부릅니다. 솔라나를 제대로 이해하기 위해서는 PA(Program Account)와 PDA(Program Derived Addresses) 개념을 제대로 이해해야 합니다. ● EVM 계열과 solana 계열의 스마트 컨트랙트(프로그램) 차이점 솔라나에서 프로그램(토큰, NFT, Name Service 등)을 이해하기 위해서는 프로그램이 어떤 구조로 동작하는지 이해해야 합니다. 여기서는 토큰을 예시로 EVM과 솔라나 계열이 어떤 차이를 가지는지 알아보겠습니다. · EVM .......",
      "link": "https://blog.naver.com/pjt3591oo/223411225439?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223411225439",
      "pubDate": "Wed, 10 Apr 2024 11:18:24 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[golang] 동시성을 위한 고루틴(goroutine)과 채널(channel)을 알아보자",
      "description": "안녕하세요 멍개입니다. 이번 시간은 고랭에서 동시성을 위해 지원하는 고루틴을 다뤄보겠습니다. 고루틴은 동시성을 위한 기능입니다. 동시성 환경에서 데이터 동기화는 매우 중요합니다. 데이터 동기화를 위해 사용하는 채널도 함께 다룹니다. ※ 동시성(concurrency)이란? 동시성과 비슷하지만 다른 개념으로 병렬성이 있습니다. 수많은 태스크를 빠르게 전환하여 마치 동시에 실행이 되는 것 같아 보이는 것을 의미합니다. 이와 비슷한 개념으로 병렬성이 있습니다. 병렬성은 태스크를 병렬적으로 실행하는 것을 의미합니다. 이런 차이로 만들어진 서버로 노드와 톰캣이 있습니다. https://blog.naver.com/pjt3591oo/223113905144 https://bl.......",
      "link": "https://blog.naver.com/pjt3591oo/223408198773?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223408198773",
      "pubDate": "Sun, 07 Apr 2024 12:07:19 +0900",
      "author": "pjt3591oo",
      "category": "golang"
    },
    {
      "title": "[solidity] 확장 가능한 컨트랙트 설계",
      "description": "안녕하세요 멍개입니다. 요즘 솔라나와 이더리움의 여러 프로토콜을 공부하고 있는데 이것들을 보면서 다양한 형태로 컨트랙트가 설계되어 관리된다는 것을 공부하였습니다. 컨트랙트를 어떤 식으로 설계할 수 있는지 다뤄보겠습니다. 지난 시간에 컨트랙트에 이해 컨트랙트를 생성하는 방법을 다뤄보았습니다. https://blog.naver.com/pjt3591oo/223385148577 factory 컨트랙트가 children 컨트랙트를 생성했다면 다음과 같은 구조로 표현할 수 있습니다. 하지만 우리는 업그레이드가 가능한 패턴을 이용하여 업그레이드가 가능한 구조를 만들어야 합니다. https://blog.naver.com/pjt3591oo/222907901247 업그레이드가 가능한 구조로 call을 사.......",
      "link": "https://blog.naver.com/pjt3591oo/223385982654?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223385982654",
      "pubDate": "Sun, 17 Mar 2024 12:18:43 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solidity] create, create2로 컨트랙트에서 새로운 컨트랙트 생성",
      "description": "안녕하세요 멍개입니다. 이번주에 opstack을 리서칭 할 일이 있어서 리서칭을 하던 중 문서에서 다음과 같은 부분을 보았습니다. 요약하면 opstack에서는 create2를 이용하여 결정적으로 배포된 컨트랙트가 존재한다는 의미였습니다. 지금까지 solidity를 사용하면서 컨트랙트를 통해 새로운 컨트랙트를 만들어야 하는 필요성이 없어서 관련 지식이 없었는데 해당 문구를 보고 공부의 필요성이 들어서 컨트랙트에서 새로운 컨트랙트를 만드는 방법을 공부해보았습니다. solidity는 create와 create2를 이용하여 컨트랙트를 배포할 수 있습니다. 참고로 이 둘의 방식으로 생성된 주소는 충돌되지 않습니다. ● create 먼저, create를 이용하여 컨.......",
      "link": "https://blog.naver.com/pjt3591oo/223385148577?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223385148577",
      "pubDate": "Sat, 16 Mar 2024 11:25:40 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solana] 트랜잭션 구조 2편 - 버전",
      "description": "안녕하세요 멍개입니다. solana의 트랜잭션은 버전을 가지고 있습니다. legacy 0 트랜잭션의 버전을 알아보기 전에 지난 1편 solana의 트랜잭션 구조를 보지 않으신 분들은 먼저 보고 오시길 바랍니다. 트랜잭션 버전에서 중요한 포인트는 account_keys 입니다. 솔라나는 해당 트랜재션에서 사용되는 모든 어카운트를 account_keys로 관리합니다. 참고로 account가 실제 연산에 사용되지 않더라도 account_keys에 포함시킬 수 있습니다. · 프로그램 배포 먼저, 다음과 같이 작성된 프로그램을 배포해보겠습니다. 배포된 프로그램의 아이디(어카운트 or pubkey)는 66qi9aMB4eFhNqn5WP6o1hc7enFkSNZzsFtQw4o4nhRt 입니다. 해당 프로그램 아이디는 배.......",
      "link": "https://blog.naver.com/pjt3591oo/223370637909?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223370637909",
      "pubDate": "Sat, 02 Mar 2024 09:21:18 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[Solana] Attempt to load a program that does not exist",
      "description": "안녕하세요 멍개입니다. solana에서 트랜잭션 발생 시 다음과 같은 에러가 발생할 수 있습니다. programId로 전달한 어카운트가 프로그램이 아니라면 존재하지 않으니 프로그램을 배포하라고 합니다. TransactionInstruction은 programId를 호출하는 코드입니다. solana는 cli를 통해 account를 조회할 수 있습니다. 이때 어카운트를 찾을 수 없다는 pubkey를 앞의 코드에서 programId로 전달하면 해당 에러가 발생합니다.",
      "link": "https://blog.naver.com/pjt3591oo/223370593073?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223370593073",
      "pubDate": "Sat, 02 Mar 2024 07:26:36 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[solana] 트랜잭션 구조 1편 - transaction과 instruction",
      "description": "안녕하세요 멍개입니다. 이번 시간은 솔라나의 트랜잭션과 연산을 의미하는 인스트럭션을 알아보겠습니다. solana에서는 instruction을 잘 이해하는 것이 매우 중요합니다. 참고로 instruction은 CPU가 실행할 명령어를 instruction이라고 부릅니다. · 계정생성 · test-validator 실행 solana-test-validator는 로컬에서 테스트 네트워크를 구동하며 ~/.config/solana/id.json 계정에 테스트 솔라나를 채워줍니다. · 의존성 모듈 설치 · 솔라나 전송 인스트럭션 솔라나의 트랜잭션은 이더리움 트랜잭션 관점으로 접근하면 안됩니다. 그 이유는 이더리움 트랜잭션과 다르게 솔라나의 트랜잭션은 여러 연산을 수행할 수 있습니다. 이더리움은 트랜.......",
      "link": "https://blog.naver.com/pjt3591oo/223369854483?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223369854483",
      "pubDate": "Fri, 01 Mar 2024 10:51:34 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[RabbitMQ] RabbitMQ 3편 - prefetch, ack, noack",
      "description": "안녕하세요 멍개입니다. 2편에서는 publisher 관점에서 살펴보았습니다. 3편은 컨슈머 관점에서 접근해보겠습니다. 지금까지 kafka를 전혀 언급하지 않았는데 이번편에서 kafka와 살짝 비교를 해보겠습니다. kafka와 rabbitmq는 각각 컨슈머 개념이 존재합니다. 컨슈머는 큐에서 메시지를 읽어오는 메커니즘은 동일합니다. 하지만 이 둘의 큰 차이점은 메시지를 읽어오는 방법의 차이가 있습니다. kafka는 컨슈머가 메시지를 읽어오는 pull 방식이며, rabbitmq는 rabbitmq가 컨슈머에게 메시지를 push하는 방식입니다. ● 환경구축 · rabbitmq docker-compose · exchange, queue, binding · 메시지 발행 ● prefetch와 ack prefetch에 설정된 수.......",
      "link": "https://blog.naver.com/pjt3591oo/223369788255?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223369788255",
      "pubDate": "Fri, 01 Mar 2024 09:10:59 +0900",
      "author": "pjt3591oo",
      "category": "서버"
    },
    {
      "title": "[nextjs] CSR, SSR 그리고 서버 컴포넌트",
      "description": "안녕하세요 멍개입니다. CSR, SSR과 서버 컴포넌트를 알아보겠습니다. 샘플 코드는 Next 15 버전을 기준으로 진행합니다. 본 포스팅에서는 TTFB, FCP, TTI와 같은 의미없는 단어 설명보단 샘플 코드를 기반으로 직관적인 설명을 합니다. ● CSR, SSR, 서버 컴포넌트 브라우저는 HTML을 어디서 렌더링하냐에 따라 Client Side Rendering, Server Side Rendering이라고 부릅니다. 그리고 Next의 13 버전부터는 Server Component 개념이 도입되었습니다. · CSR 먼저, CSR을 살펴보겠습니다. 참고로 해당 방식은 nextjs 팀에서는 클라이언트 컴포넌트라고도 표현합니다. CSR의 대표적인 라이브러리 / 프레임워크는 뷰와 리액트입니다. next의 app rou.......",
      "link": "https://blog.naver.com/pjt3591oo/223649384531?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223649384531",
      "pubDate": "Wed, 06 Nov 2024 14:58:08 +0900",
      "author": "pjt3591oo",
      "category": "Web"
    },
    {
      "title": "[서버] 헤더 사이즈는 무한정 가능할까?",
      "description": "안녕하세요 멍개입니다. 이번 시간은 http 프로토콜의 header를 다뤄보고자 합니다. 블로그 제목처럼 header 사이즈는 무한정 가능한지 실험을 해보고자 합니다. 이 경우 두 가지 상황을 고려 할 수 있습니다. 서버가 클라이언트에게 응답하는 경우와 클라이언트가 서버에게 요청하는 경우입니다. 본 포스트 내용은 서버, 클라이언트 버전에 따라 다르게 동작할 수 있습니다. ● 서버가 클라이언트에게 응답: header에 포함된 key가 많은 경우 · 브라우저 브라우저에서는 해당 요청이 취소되면서 ERR_RESPONSE_HEADERS_TOO_BIG 에러를 표시합니다. · postman postman은 API 개발시 테스트할 때 많이 사용하는 도구입니다. postman에서는 Parse Er.......",
      "link": "https://blog.naver.com/pjt3591oo/223658791971?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223658791971",
      "pubDate": "Wed, 13 Nov 2024 13:58:39 +0900",
      "author": "pjt3591oo",
      "category": "서버"
    },
    {
      "title": "[aptos] aptos 4편 - 토큰 자산을 알아보자 Fungible Asset",
      "description": "안녕하세요 멍개입니다. aptos에서는 자산을 크게 두 가지로 분류하여 관리합니다. ERC20과 같은 자산을 의미하는 Fungible Asset NFT(SBT)와 같은 자산을 의미하는 Digital Asset 이번 시간은 ERC20과 같은 Fungible Asset을 다뤄보겠습니다. ● FA 배포하기 · profile 생성하기 우리의 토큰이 배포될 프로필(어카운트)를 생성합니다. profile 이름은 생략 가능하면 생략할 경우 default가 됩니다. 우리는 testnet에 배포하기 위해 network는 testnet으로 설정합니다. 프로필이 생성되면 .aptos 경로에서 config.yaml 파일이 생성됩니다. · 토큰작성 ▶ Move.toml ▶ fa_coin.move · 배포하기 · 배포된 토큰 확인하기 aptos의 FA는 다음과 같은.......",
      "link": "https://blog.naver.com/pjt3591oo/223670263692?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223670263692",
      "pubDate": "Sat, 23 Nov 2024 09:37:51 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[aptos] aptos 5편 - 토큰 자산을 알아보자 Digital Asset",
      "description": "안녕하세요 멍개입니다. 4편에서는 토큰에 해당하는 Fungible Asset(FA)을 다뤄보았습니다. 5편에서는 NFT(or SBT)에 해당하는 Digital Asset을 다뤄보겠습니다. Digital Asset을 줄여 DA라고 표현하겠습니다. DA의 경우 FA(Fungible Asset)와 다르게 별도의 모듈을 만들어서 배포할 필요 없습니다.(물론 별도의 모듈을 배포하여 NFT, SBT를 배포, 전송 등의 관리할 수 있습니다. DA는 0x4::aptos_token을 활용합니다. 또한 발급받은 NFT와 SBT는 object 형태로 생성되기 때문에 transfer할 경우 0x1::object::transfer를 호출하게 됩니다.(1~5편까지 object를 제대로 다루지 않았는데 이는 추후에 별도로 다루겠습니다. 여기서는 object가 aptos.......",
      "link": "https://blog.naver.com/pjt3591oo/223671375658?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223671375658",
      "pubDate": "Sun, 24 Nov 2024 19:05:58 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[aptos] aptos 6편 - 한 트랜잭션을 처리하기 위한 여러 사용자의 서명",
      "description": "안녕하세요 멍개입니다. aptos는 하나의 트랜잭션을 처리하기 위해 다수의 사용자로부터 서명을 받을 수 있는 방법이 두 가지 존재합니다. 첫 번째. multi agent 두 번째. multi sig 이번 시간은 multi agent와 multi sig를 다룹니다. 샘플 코드는 깃허브에서 확인할 수 있습니다. https://github.com/pjt3591oo/aptos-multiagent-multisig 웬만하면 샘플코드를 마지막에 넣는데 내용이 길어 먼저 제공합니다. (친절한 멍개씌) ● multi agent multi agent는 한 트랜잭션을 처리하기 위해 여러 지갑의 서명을 포함하는 것을 의미합니다. multi agent는 모든 경우에 다 사용할 수 없습니다. aptos에서는 트랜잭션을 발생하기 위해 entry가 붙은 함.......",
      "link": "https://blog.naver.com/pjt3591oo/223674377875?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223674377875",
      "pubDate": "Wed, 27 Nov 2024 10:39:24 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[aptos] aptos 7편 - 데이터 저장 모델 resource와 object",
      "description": "안녕하세요 멍개입니다. aptos를 다룬지 벌서 7편이 되었습니다. 7편을 다루는 동안 계속 적으로 언급된 내용이 리소스와 오브젝트 입니다. 앞에서는 데이터가 저장된 공간이라고만 언급하고 넘어갔지면 이번 편에서 이 둘을 자세히 다뤄보겠습니다. ● Account 모델 리소스와 오브젝트를 알아보기 전에 aptos에서의 account 구조를 다시 살펴보겠습니다. aptos의 account는 크게 2가지 정보를 가집니다. Resource Storage Authenticate Key Aptos Coin Modules 이를 코드레벨에서 살펴보면 다음과 같은 GlobalStorage 아래에 resources와 modules로 나뉘어 관리합니다. · Resource Storage Resource Storage는 해당 어카운트에서 저장하고 있는.......",
      "link": "https://blog.naver.com/pjt3591oo/223678639004?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223678639004",
      "pubDate": "Sun, 01 Dec 2024 11:07:41 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[aptos] aptos 8편 - script를 이용하여 배포되지 않은 move 코드를 실행해보자",
      "description": "안녕하세요 멍개입니다. aptos는 모듈을 배포하지 않더라도, move로 작성된 모듈 코드를 실행할 수 있습니다. 하지만 약간의 제약사항이 존재합니다. 바로 함수를 호출할 때 전달되는 인자의 타입이 정해져 있습니다. ☞ u8 ☞ u16 ☞ u32 ☞ u64 ☞ u256 ☞ address ☞ bool ☞ signer(&amp;signer) ☞ vector&lt;u8&gt; ☞ vector&lt;address&gt; : 문서상에는 나와있지 않지만 가능함(제가 이전에 테스트 할 때도 불가능 했는데 포스팅 시점인 2024-12-08 가능) script도 모듈과 개발 방법이 동일합니다. · script 프로젝트 생성 sources 아래에 script_sample.move를 만들어 줍니다. · script 코드 작성 script와 module의 차이점으로 module.......",
      "link": "https://blog.naver.com/pjt3591oo/223686179374?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223686179374",
      "pubDate": "Sun, 08 Dec 2024 08:56:18 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "멍개의 2024년 회고록",
      "description": "안녕하세요 멍개입니다. 2017년부터 매년 회고록을 작성했는데 올해도 어김없이 회고록을 작성해볼까 합니다. 벌써 9년차 직장인(개발자)에서 10년차로 넘어가는 해가 되었습니다. 벌써 10년차라니..... 시간이 너무 빠릅니다 ㅠㅠ 2024년의 키워드는 7개로 정리할 수 있습니다. 2024년은 저에게 있어 기억이 많이 남는 한 해가 됩니다. 큰 사건으로는 2가지가 있습니다. 먼저, 2024년 이직을 하게 되었습니다. https://blog.naver.com/pjt3591oo/223343566638 이직을 왜 했는지는 전에 작성해둔 글을 참고하면 되겠습니다. 두 번째 사건은 2024년 6~9월 까지 두 번째 집을 매매 했다는 것 입니다. 대출없이 매매 했다는 것에 큰 의의를 두고 있.......",
      "link": "https://blog.naver.com/pjt3591oo/223701908069?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223701908069",
      "pubDate": "Sun, 22 Dec 2024 12:56:54 +0900",
      "author": "pjt3591oo",
      "category": "공부, 목표"
    },
    {
      "title": "[react] react19 업그레이드 가이드 - 공유",
      "description": "https://react.dev/blog/2024/04/25/react-19-upgrade-guide",
      "link": "https://blog.naver.com/pjt3591oo/223704787788?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223704787788",
      "pubDate": "Wed, 25 Dec 2024 08:54:08 +0900",
      "author": "pjt3591oo",
      "category": "Web"
    },
    {
      "title": "[react] react19 알아보자",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 react19를 다뤄보겠습니다. ● react19 프로젝트 생성 vite를 기반으로 react 프로젝트 생성을 시도합니다. · 프로젝트 생성 프로젝트 이름은 적당히 작명합니다. 저는 my-app으로 진행했습니다. · react19 업그레이드 생성된 리액트 프로젝트는 19 버전이 아니므로 react와 react-dom을 19버전으로 추가 설치합니다. ● actions 다음과 같은 코드를 살펴보겠습니다. 코드가 그다지 깔끔하지 못합니다. 이러한 문제점을 개선하기 위해 다양한 라이브러리(react-hook-form, tanstack query, react query 등)의 도움을 받습니다. 사실 이러한 문제를 해결하기 위해 react 18에서도 useTransition 함수가.......",
      "link": "https://blog.naver.com/pjt3591oo/223704891291?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223704891291",
      "pubDate": "Wed, 25 Dec 2024 12:05:44 +0900",
      "author": "pjt3591oo",
      "category": "Web"
    },
    {
      "title": "[블록체인] 블록체인에서 소수는 어떻게 표현할까",
      "description": "안녕하세요 멍개입니다. 이번 포스트는 블록체인에서 소숫점 아래를 어떻게 표현하는지 알아보도록 하겠습니다. 소숫점에서 가장 중요한 이슈중 하나는 라운딩에러(rounding error)입니다. 라운딩 에러의 대표적인 예가 다음과 같습니다. https://blog.naver.com/pjt3591oo/221818209435 이러한 라운딩에러를 해결하기 위해 일반적은 프로그래밍 언어에서는 Decimal을 이용합니다. ● Decimal 먼저, Decimal이 무엇인지부터 알아보겠습니다. 결론부터 말하자면 Decimal은 10의 거듭제곱으로 표현될 수 있는 수를 의미합니다. 즉, 10의 거듭제곱 형태로 표형될 수 없는 수는 Decimal Number가 아니게 됩니다. 두 가지 수를 예로 들어보겠습니다. ☞.......",
      "link": "https://blog.naver.com/pjt3591oo/223708514570?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223708514570",
      "pubDate": "Sun, 29 Dec 2024 16:10:45 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "러닝이 취미인 개발자의 2025년 맞이하는 방법",
      "description": "체감 심박이 150이 안되는데 170까지 찍히네 ㅋㅋㅋㅋ 애플워치 가끔 심박 너무 이상하게 측정되는 듯...",
      "link": "https://blog.naver.com/pjt3591oo/223711661734?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223711661734",
      "pubDate": "Wed, 01 Jan 2025 17:40:12 +0900",
      "author": "pjt3591oo",
      "category": "운동"
    },
    {
      "title": "[강좌] EVM 강좌0. 오리엔테이션",
      "description": "https://youtu.be/Zpq7RQhYKPU?si&#x3D;y9yglPKl8FdQauUf",
      "link": "https://blog.naver.com/pjt3591oo/223714493310?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223714493310",
      "pubDate": "Sat, 04 Jan 2025 13:43:59 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[ethereum] foundry를 이용하여 스마트 컨트랙트 개발하기",
      "description": "안녕하세요 멍개입니다. 이번글에서는 foundry을 이용하여 스마트 컨트랙트를 개발하는 방법을 다룹니다. foundry는 truffle, hardhat 처럼 스마트 컨트랙트 개발을 도와주는 도구입니다. foundry는 4개의 명령 도구를 제공합니다. forge: test, compile, build, deploy cast: rpc 통신 anvil: local testnet chisel: REPL ● 셋업 foundry는 공식문서를 통해 설치 가이드를 확인할 수 있습니다. foundry는 rust 기반이기 때문에 rust가 설치되어 있어야 합니다. https://book.getfoundry.sh/getting-started/installation foundry에서 스마트 컨트랙트 개발/테스트/배포하는 과정은 forge를 이용합니다. · 프로젝트 생성 ▶ foundry.toml: 프로.......",
      "link": "https://blog.naver.com/pjt3591oo/223715195651?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223715195651",
      "pubDate": "Sun, 05 Jan 2025 12:43:05 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "EVM 강좌 1. foundry를 이용하여 스마트 컨트랙트 개발",
      "description": "https://youtu.be/9LDkEugcFS8",
      "link": "https://blog.naver.com/pjt3591oo/223723243616?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223723243616",
      "pubDate": "Sun, 12 Jan 2025 11:54:03 +0900",
      "author": "pjt3591oo",
      "category": "멍선생의 EVM"
    },
    {
      "title": "EVM 강좌 2. hardhat를 이용하여 스마트 컨트랙트 개발",
      "description": "https://youtu.be/eRRIX_F6Xyg",
      "link": "https://blog.naver.com/pjt3591oo/223723331651?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223723331651",
      "pubDate": "Sun, 12 Jan 2025 14:04:40 +0900",
      "author": "pjt3591oo",
      "category": "멍선생의 EVM"
    },
    {
      "title": "EVM 강좌 4. remix IDE를 이용하여 스마트 컨트랙트 개발",
      "description": "https://www.youtube.com/watch?v=1t2k0up4zqc",
      "link": "https://blog.naver.com/pjt3591oo/223738225561?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223738225561",
      "pubDate": "Sat, 25 Jan 2025 16:50:56 +0900",
      "author": "pjt3591oo",
      "category": "멍선생의 EVM"
    },
    {
      "title": "EVM 강좌 3. hardhat를 이용하여 스마트 컨트랙트 개발",
      "description": "https://www.youtube.com/watch?v=L1TwJ2Jsp9A",
      "link": "https://blog.naver.com/pjt3591oo/223738223341?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223738223341",
      "pubDate": "Sat, 25 Jan 2025 16:48:15 +0900",
      "author": "pjt3591oo",
      "category": "멍선생의 EVM"
    },
    {
      "title": "10년차 개발자의 인공지능 서비스 소개",
      "description": "여러 인공지능 서비스들을 4가지 카테고리로 구분하여 소개를 해보았습니다. 1.채팅 1.1 gemini - google 1.2 claude - anthropic 1.3 chatgpt - openAI 1.4 copilot - microsoft 1.5 deepseek - 하이 플라이어(중국) 2. PPT 2.1 gamma.app 3. 웹 사이트 개발 3.1 bolt.new 4. UI 협업툴(figma) 4.1. creatie 5. 모델 비교 & 서비스 탐색기 5.1 lmarena 5.2 aixploria https://www.youtube.com/watch?v=l-_izCABqfw",
      "link": "https://blog.naver.com/pjt3591oo/223738880753?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223738880753",
      "pubDate": "Sun, 26 Jan 2025 09:14:03 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[블록체인] multi-sig와 key rotation을 이용한 악용사례",
      "description": "안녕하세요 멍개입니다. 이번 시간엔 multi-sig와 key rotation을 이용한 사기 수법을 소개합니다. 본 포스트의 목적은 사기 수법을 공개함으로써 피해자가 없기를 바라는 마음으로 작성합니다. evm, aptos, solana 등 대부분의 블록체인에서는 어카운트 구조를 사용합니다. 개인키는 해당 어카운트의 모든 권한을 가지게 됩니다. · 다중서명(Multi-Sig) or 권한(Permission) 한 어카운트를 하나의 개인키가 아닌 다수의 개인키를 등록시켜서 다수의 개인키 서명을 받아야 트랜잭션을 성공시키는 방법이 multi sig 입니다. multi sig를 사용하는 이유는 어카운트의 제어권을 여러 개인키로 분산함으로써 도난 / 무단 액세스 등의 위험으로부터 보.......",
      "link": "https://blog.naver.com/pjt3591oo/223744196919?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223744196919",
      "pubDate": "Sat, 01 Feb 2025 13:20:36 +0900",
      "author": "pjt3591oo",
      "category": "블록체인"
    },
    {
      "title": "[react] react19 + next15 + shadcn + tailwind4 최신버전 조합",
      "description": "안녕하세요 멍개입니다. 이번 시간은 현재(2025-02-09) react의 최신버전들의 조합인 react19 + next15 + shadcn + tailwind4 레포를 소개합니다. https://github.com/shadcn/app-tailwind-v4 · clone · install dependencies 설치 중 다음과 같은 에러가 발생합니다. 에러 내용을 살펴보면 cmdk@1.0.0은 react@^18.0.0 버전에 의존되어 있습니다. 완전한 해결책은 아니지만 --force 또는 --legacy-peer-deps를 이용하여 설치를 합니다. · 실행 http://localhost:3000으로 접속하면 다음과 같이 페이지에 접속할 수 있습니다. · deploy",
      "link": "https://blog.naver.com/pjt3591oo/223753908176?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223753908176",
      "pubDate": "Sun, 09 Feb 2025 12:17:32 +0900",
      "author": "pjt3591oo",
      "category": "Web"
    },
    {
      "title": "AI와 함께하는 PDF 편집도구 UPDF 소개",
      "description": "안녕하세요 멍개입니다. 해당 포스트는 UPDF로부터 지원을 받아 작성된 글 입니다. ● 소개 대부분의 직장인, 학생, 프리랜서와 같은 사람들은 PDF를 많이 사용하고 있습니다. 특히 저와같이 집필 작업을 하는 경우 PDF를 많이 이용합니다. 앞의 이미지는 제가 집필한 [파이썬으로 배우는 웹 크롤러]를 UPDF로 열은 모습입니다. 기존의 PDF 편집 도구는 제한된 편집 기능, 콘텐츠를 원활하게 번역하거나 요약할 수 없으며, 문서 보안 또는 서명의 어려움이 존재합니다. UPDF는 올인원 솔루션으로 이러한 문제점을 해겨합니다. 강력한 편집도구, 요약 및 번역을 위한 AI 기능, 강력한 암호화 및 서명 기능을 제공하여 보다 월활하고 효율적인 작업.......",
      "link": "https://blog.naver.com/pjt3591oo/223762474538?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223762474538",
      "pubDate": "Sun, 16 Feb 2025 15:46:11 +0900",
      "author": "pjt3591oo",
      "category": "광고"
    },
    {
      "title": "[인공지능] deepseek, 챗GPT, grok3, claude, gemini중 누가 퍼블리싱을 잘할까?",
      "description": "안녕하세요 멍개입니다. 이번시간은 현재(2025년 02월 22일 토요일) 기준으로 나와있는 인공지능 서비스 중 누가 퍼블리싱을 잘하는지 대결시켜 보겠습니다. 멍개의 퍼블리싱 대회에 참가하는 인공지능(AI) 선수는 다음과 같습니다. ▶ deepseek ▶ 챗GPT(chatgpt) ▶ grok3 ▶ claude ▶ gemini 이번 대결에서 펼쳐질 대결의 주제는 퍼블리싱입니다. 각 모델들에게 다음과 같이 질문을 수행합니다. 나는 펀딩 서비스를 만들려고 하는 풀스택 개발자입니다. 당신은 html, css, javascript 전문가입니다. 나는 펀딩 서비스의 메인 페이지와 상세 페이지의 퍼블리싱이 필요합니다. css는 tailwind를 이용해주세요. 디자인은 딱딱하지 않고 트랜디한.......",
      "link": "https://blog.naver.com/pjt3591oo/223769434169?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223769434169",
      "pubDate": "Sat, 22 Feb 2025 11:03:53 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 인공지능이 만든 웹으로 서비스를 오픈할 수 있을까?",
      "description": "안녕하세요 멍개입니다. 지난시간에 가장 대중적인 LLM 서비스 5개를 다뤄보았습니다. 이번 시간엔 웹 개발에 최적화 된 2가지 서비스를 소개하려고 합니다. https://bolt.new/ https://lovable.dev/ 앞의 서비스는 자체적인 호스팅이 가능하며 supabase 연동 및 깃허브 레포지토리 생성까지 가능합니다. 위 서비스를 통해 2개의 서비스를 만들어 보겠습니다. 펀딩 사이트 채팅 어플리케이션 ● bolt bolt는 프로젝트 종류를 고를 수 있습니다. · 펀딩 사이트 제작 답변이 완성되면 다음과 같이 preview를 볼 수 있습니다. 우측 상단에 Deploy 버튼을 누르면 다음과 같이 호스팅이 완료되며 접속 가능한 URL 주소를 줍니다. https://elegant-kitt.......",
      "link": "https://blog.naver.com/pjt3591oo/223790470478?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223790470478",
      "pubDate": "Mon, 10 Mar 2025 10:29:32 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] AI로 뚝딱 5분만에 만들어본 사가지 테스트 서비스",
      "description": "일하다가 시간이 좀 생겨서 만들어보았다. 요즘 이런 서비스는 AI 5분이면 뚝딱 만든다. 배포까지 하면 10분... https://namu-hub.vercel.app/share/sagagi-test-question/naver-blog 너무나 무서운 세상이 되었다.",
      "link": "https://blog.naver.com/pjt3591oo/223793456626?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223793456626",
      "pubDate": "Wed, 12 Mar 2025 15:32:37 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] AI로 만들어 본 사과게임",
      "description": "bolt로 뚝딱 만들어보았다 https://namu-hub.vercel.app/share/apple-game/jeong-naver-blog <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMTRfODUg/MDAxNzQxOTQ2MjUwNTA5.X8EZqOJmAGRBzvEepy62K7vI1x4QlrP40YlhAFjoE3wg.QqVejc5W1ccnvBBcrgCq6ZWaWXNFkg3t2DAVw8OPb3Yg.JPEG/IMG_5618.jpg?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223796203411?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223796203411",
      "pubDate": "Fri, 14 Mar 2025 18:57:50 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[LLM] OpenAI와 호환되는 LM Studio로 나만의 LLM 서버 구축하기",
      "description": "안녕하세요 멍개입니다. 요즘 chat gpt, gemini, claude, grok, deepseek와 같은 LLM 서비스가 대세입니다. LM Studio는 로컬에 LLM 모델을 설치하여 LLM 서비스를 제공받을 수 있는 GUI 프로그램입니다. LM Studio를 이용하면 개발적인 지식이 없더라도 로컬 환경에서 손쉽게 LLM 서버를 구축할 수 있습니다. 또한 모델을 다운받은 후 로컬에서 동작하기 때문에 오프라인 환경에서도 이용이 가능합니다. · 채팅 채팅을 위해 먼저 모델을 선택해야 합니다. 만약 앞의 이미지처럼 좌측 패널이 보이지 않는다면 하단의 User, Power User, Developer중 Developer로 선택되어 있는지 확인이 필요합니다. · 모델 설치 모델은 좌측의 돋보기 버튼을 통....... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMjJfMjMg/MDAxNzQyNjAwODQ2ODA3.WmKBhr_MiZNwqrv51Ncens9D1TCo_hIe3H89gQ42TpQg.wi0RbxvEfPKni3q2nOznMtzvsUzeRX1ajQlc3SWvFg8g.PNG/Screenshot_2025-03-22_at_08.47.15.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223805688524?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223805688524",
      "pubDate": "Sat, 22 Mar 2025 09:44:05 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[사과게임] 인싸게임 사과게임을 만들고 최고 득점을 계산하는 방법",
      "description": "안녕하세요 사과 게임에 빠져있는 멍개입니다. 사과게임은 처음 일본에서 후르츠 박스라는 이름으로 만들어졌습니다. https://www.gamesaien.com/game/fruit_box_a/ 저는 보통 앱으로 합니다. https://play.google.com/store/apps/details?id=kr.yunu.make10&hl=ko https://apps.apple.com/kr/app/%EC%82%AC%EA%B3%BC%EA%B2%8C%EC%9E%84-%ED%99%94%EC%A0%9C%EC%9D%98-%EC%9D%B8%EC%8B%B8%EA%B2%8C%EC%9E%84/id1566126120 사과 게임은 10 * 17 맵에서 합이 10이 되는 사각형을 찾아 지워가는 게임입니다. 지워진 사과 개수만큼 1점씩 올라갑니다. · 맵 생성 해당 함수의 테스트 코드는 다음과 같습니다. 여기서 각각의 아이템이 1~9....... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMjNfMTg4/MDAxNzQyNjk2NjQ2NTc4.bD-6rTSaLe84lGeKBUbV76NIt6OTkYeV0hgi2BPnEtQg.ibOWyaRhS4t_tu8i6YwxcHJpiEMutn017G6LlWFD7w8g.PNG/Screenshot_2025-03-23_at_11.23.12.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223806947807?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223806947807",
      "pubDate": "Sun, 23 Mar 2025 17:42:05 +0900",
      "author": "pjt3591oo",
      "category": "게임개발"
    },
    {
      "title": "[인공지능] chat gpt 4o로 이모티콘을 만들어보았다.",
      "description": "진짜 미쳤다라는 말 밖에 안나온다.... 도대체 세상이 어떻게 바뀔지 너무 기대가? 아니 무섭다..... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMjdfMjU1/MDAxNzQzMDM5NTI0MDEx.f0tKT3u8aKAygp5sGs627YSUEj30v-DciekCpa-0etsg.RjiQTUwdHXTNR8u0RgfH53qGOBV01f0-tnj3JqZ8XlQg.PNG/ChatGPT_Image_2025%B3%E2_3%BF%F9_27%C0%CF_%BF%C0%C0%FC_10_33_42.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223811471856?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223811471856",
      "pubDate": "Thu, 27 Mar 2025 10:48:32 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[인공지능] LLM 서비스의 확장을 위한 MCP",
      "description": "안녕하세요 멍개입니다. 이번 시간은 요즘 매우 핫한 MCP를 다뤄보겠습니다. 먼저, MCP(Model Context Protocol)가 무엇인지부터 살펴보겠습니다. 그리고 cursor와 claude에서 MCP를 사용해보겠습니다. ● MCP MCP는 Model Context Protocol입니다. MCP는 anthropic에서 만든 프로토콜을 규정한 것을 의미합니다. MCP는 프로토콜(약속 or 규칙)입니다. 그렇다면 무엇을 위한 프로토콜일까요? · MCP 구조 우리는 chatgpt, claude, grok3, gemini와 같은 LLM 서비스를 이용하거나 LLM 모델이 탑재된 cursor와 같은 AI 도구를 이용하게 됩니다. 이러한 도구들을 MCP Client라고 합니다. 우리의 MCP Client들은 특정 프로그램과 연결하여 데이터를 조....... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMjhfMjE5/MDAxNzQzMTM5ODUzNTQ1.w2Ks4dFZ3n7sNfnEjdinXmvIqNdCsxmhnIEpVZfDNXkg.ouSvWE4abDLHpSXEUqvAtZs6Ch6PdhhxGexPPC1Sd4cg.PNG/Untitled_Diagram.drawio_%281%29.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223813104521?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223813104521",
      "pubDate": "Fri, 28 Mar 2025 16:21:12 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] Chrome Devtools MCP를 활용하여 디버깅을 해보자",
      "description": "안녕하세요 멍개입니다. 오늘은 chrome devtools MCP를 이용하여 디버깅을 해보겠습니다. 본 글을 읽기전에 MCP가 무엇이고 어떻게 셋팅을 해야하는지 모른다면 다음글을 먼저 읽고 오는것을 추천드립니다. https://blog.naver.com/pjt3591oo/223813104521 ● Chrome Devtools MCP 셋업하기 Chrome Devtools MCP를 사용하기 위해선 MCP 서버 뿐 아니라 크롬 확장 프로그램과 별도의 추가적인 서버가 필요합니다. · 깃 레포지토리 해당 레포지토리에는 3개의 구성 요소가 존재합니다. chrome-extension은 크롬 확장 프로그램으로 추가해야 합니다. browser-tools-server는 별도로 서버를 실행시켜야 합니다. (npx로 해당 경로를 직접 이용하지 않....... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMjlfNDgg/MDAxNzQzMjM0MDEwMjQw.J9E3KcaJT1zyGxQ5TSC4khabxqmhzciHRUzrJm26idEg.hsZtfb9LXFkwKOUmwoMQH6pAg2T1JARKa0lpT1HHZbwg.PNG/Screenshot_2025-03-29_at_16.39.48.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223814132934?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223814132934",
      "pubDate": "Sat, 29 Mar 2025 17:21:34 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] Figma MCP를 이용하여 커피숍 앱 만들어보기",
      "description": "안녕하세요 멍개입니다. 이번 시간은 Figma MCP를 이용하여 커피숍 앱의 한 페이지를 만들어보겠습니다. · Figma Access Token 얻기 대시보드에서 프로필 - 셋팅을 들어가면 됩니다. 다음과 같이 셋팅화면이 뜨게되는데 Security탭을 들어가면 Personal Access Tokens에서 Generate 토큰을 누르면 토큰 발급이 가능합니다. · Figma MCP 추가 앞에서 생성된 Access Token을 [FIGMA-ACCESS-TOKEN]에 넣어줍니다. get_figma_data는 피그마의 데이터를 가져옵니다. download_figma_images는 피그마의 디자인을 이미지로 다운로드 받습니다. ● Figma MCP로 프론트엔드 개발 figma는 다음링크에서 샘플 디자인을 공유합니다. https://www.figma.com/co....... <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMzBfMTAg/MDAxNzQzMzEzODgyNjE4.C1o2tk4dwCRfmQmvPEJj0GCWFlyoiFVSLsdXHPW0sogg.2UjKWGVTHyE1K6vd7pU0Dzrc8lnjKoc1PJInxe2XpOAg.PNG/Screenshot_2025-03-30_at_14.50.47.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223814999583?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223814999583",
      "pubDate": "Sun, 30 Mar 2025 16:07:24 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 나만의 MCP Client를 만들어보자",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 Cursor와 Claude와 같이 MCP를 제공하는 도구의 원리를 이해하기 위해 MCP Client를 직접 구축해보겠습니다. 지난 시간에 MCP가 어떤 구조로 되어있는지 다뤄보았습니다. Host는 실제로 사용자가 조작하는 어플리케이션을 의미합니다. 대표적으로 Cursor, Claude가 있습니다. 또한 최근에는 visual studio code에서도 MCP를 사용할 수 있도록 업데이트가 되었습니다. 본 포스트에서는 stdio / sse 방식으로 구성된 MCP Server를 구성하고 MCP Client로 연결하여 사용하는 방법을 javascript로 알아보겠습니다. MCP Server는 stdio와 SSE 방식으로 제공할 수 있습니다. Server는 일반적인 서버를 의미하....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MDZfMjQy/MDAxNzQzOTI3NTY1MDk2.NEFS49GN0u_jwpfaqxY-ZqvPaXfPj9cMvRIEHvHSBG4g.S2GYQVmGvUw5loeodimFIkxsPoAdHgKwB8ycfN21rIYg.PNG/%C1%A6%B8%F1_%BE%F8%B4%C2_%B4%D9%C0%CC%BE%EE%B1%D7%B7%A5.drawio_%282%29.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223824144846?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223824144846",
      "pubDate": "Sun, 06 Apr 2025 20:43:04 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 나만의 MCP Host를 만들어보자",
      "description": "안녕하세요 멍개입니다. 지난시간에 MCP Client를 구현함으로써 MCP Host, MCP Client, MCP Server가 어떤 관계이며 어떻게 동작하는지 알아보았습니다. MCP Client만 보면 기존의 서버와 클라이언트와 차이점이 없습니다. HOST는 사용자에게 인터페이스를 제공하는 역할을 하며 LLM 모델로 하여금 쿼리를 분석하여 어떤 Client의 tools을 호출할지와 tools을 호출하기 위한 arguments를 만들어줍니다. 앞의 구조를 좀 더 자세히 보면 다음과 같습니다. 앞의 구조처럼 LLM 모델이 있어야 사용자의 자연어 입력으로부터 적절한 MCP Server를 호출할 수 있습니다. langchain을 이용하면 손쉽게 구현할 수 있습니다. 또한 LM Studio를 이용하면 로컬....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MTJfMTk4/MDAxNzQ0NDI1MDAwNzY3.GYpu6VFjQGhEXOy3A08Bll1fVcaso5Bqfu_sUPKjt1Ag.EHfdfzXlHs2j1LP3Zq8ljVQeSi77f--OTgzjzHbiXUUg.PNG/%C1%A6%B8%F1_%BE%F8%B4%C2_%B4%D9%C0%CC%BE%EE%B1%D7%B7%A5.drawio_%283%29.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223830623105?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223830623105",
      "pubDate": "Sat, 12 Apr 2025 12:28:44 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] ADK(Agent Development Kit)를 이용하여 Agent를 만들어보자 1편",
      "description": "안녕하세요 멍개입니다. 오늘은 최근에 구글에서 발표한 ADK(Agent Development Kit)을 다뤄보겠습니다. ADK는 Agent를 개발하기 위한 도구입니다. ADK를 다루기 전에 기본적인 agent 동작 방식을 이해해야 합니다. agent의 동작 방식은 MCP와 크게 다르지 않습니다. agent는 사용자로부터 쿼리를 받으면 적절한 tool을 호출하는 역할을 합니다. 이를 위해 다음과 같은 프로세스를 따릅니다. 사용자 쿼리를 받으면 이를 LLM 모델에 태워 agent가 가지고 있는 tool을 호출해야 하는지 결정 tool 호출이 결정되면 tool 호출을 하기 위해 필요한 arguments 추출 tool 호출 결과를 받으면 LLM을 통해 사용자에게 응답할 적절한 메시지 형태로 생성 ※....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MTZfMjUw/MDAxNzQ0Nzg2MTM0MTAz.EigeyxdOzmXE9SaJmPL0PmBvJ7aTflILFc7BWv5SPvkg.dXUlUj9P-Ey2UG9MR-tJhO5db_fhrlL499UXaMNwETog.PNG/Screenshot_2025-04-16_at_15.48.40.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223836017889?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223836017889",
      "pubDate": "Wed, 16 Apr 2025 18:08:45 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[python] 파이썬 패키지 / 프로젝트 관리 도구 종결자 uv",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 uv 도구를 알아보겠습니다. 먼저, uv는 rust로 개발되었으며 pip와 venv, pyenv, poetry와 같이 패키지 관리, 프로젝트 관리, 가상환경 관리 등을 통합적으로 제공하는 도구입니다. https://blog.naver.com/pjt3591oo/222633677248 우리가 프로젝트를 진행할 때 관리하는 요소는 다음과 같습니다. 사용중인 런타임 / 언어의 버전(node에서는 n or nvm 이용) 프로젝트 관리(node에서는 package.json) 패키지 관리(node에서는 package.json) 프로젝트를 진행한다면 3가지 요소는 필수적으로 관리해야 합니다. 매우 당연한건데 파이썬은 이를 위해 별도의 도구들을 사용했어야 했습니다..... 이제서야 정.......",
      "link": "https://blog.naver.com/pjt3591oo/223839255919?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223839255919",
      "pubDate": "Fri, 18 Apr 2025 23:40:44 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[인공지능] A2A란 무엇인가? 데모(demo)로 이해해보자",
      "description": "안녕하세요 멍개입니다. 지난 시간에 구글에서 발표한 ADK(Agent Development Kit), A2A(Agent2Agent)중 ADK를 다뤄보았습니다. 이번 시간은 A2A를 다뤄보겠습니다. A2A에 대한 샘플 코드는 깃허브에서 제공하고 있습니다. https://github.com/google/A2A ● A2A를 이해해보자 Agent간 통신은 어떻게 이루어지는지 알아보겠습니다. A2A는 한마디로 Agent에게 호출하는 표준입니다. 이 표준은 Agent의 스펙을 알려주는 하나의 API(/.well-known/agent.json)와 호출을 위한 JSON-RPC2.0으로 정의되어 있습니다. · A2A란? ADK는 Agent를 만드는 방법을 제공합니다. https://github.com/pjt3591oo/ADK-sample 여기서 각각의 항목이 Agent라고 할 수 있....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MTlfMTM1/MDAxNzQ1MDI1NDA0Mjk0.uZRCkEV2NKCZ98hf_QpbUytHOiY7WJwWKfdLccw4nUAg.KSZs87Dvz1iyO0xvg9n42r_a0EhUOX6hlMLlE1DbbEQg.PNG/Screenshot_2025-04-19_at_10.16.36.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223839552262?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223839552262",
      "pubDate": "Sat, 19 Apr 2025 11:28:45 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 구글이 공개한 A2A를 이용하여 코드생성 A2A Server 만들기",
      "description": "안녕하세요 멍개입니다. 지난 시간에 구글이 공개한 A2A가 무엇이고 샘플 코드/데모를 구동시켜 보았습니다. https://blog.naver.com/pjt3591oo/223839552262 ADK의 경우는 Development Kit이기 때문에 pypi, npm 등을 이용하여 설치 후 사용할 수 있었습니다. 하지만 A2A는 프로토콜이기 때문에 아직은 공식적으로 pypi나 npm 등에 존재하진 않습니다. · 프로젝트 준비 먼저, A2A를 가져옵니다. samples/python 경로를 이용하여 나만의 에이전트를 추가합니다 3개의 핵심 파일을 생성합니다. ☞ agent.py ☞ task_manager.py ☞ __main__.py 각 파일의 의존성은 다음과 같습니다. [__main__.py] <--- [task_manager.py] <--- [agent.py] _....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MjBfMzAw/MDAxNzQ1MTE1MDM5MDU1.bHeg3VkEzNmOIyRPXhYqa4Il__B64I1KIBYs1JcNG-Qg.cI9CSS8ydMchyBV53nOT2KbLNuLEX62QMonXf0e_3pwg.PNG/Screenshot_2025-04-20_at_11.10.34.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223840293717?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223840293717",
      "pubDate": "Sun, 20 Apr 2025 11:23:42 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 개발자가 권장하는 바이브 코딩하는 방법과 신입 개발자가 설계 공부하는 방법",
      "description": "안녕하세요 멍개입니다. 이번 포스트에서는 인공지능을 이용하여 바이브 코딩할 때 좋은 팁과 신입 개발자가 설계를 공부하는 방법을 다뤄보도록 하겠습니다. 요즘 인공지능을 이용하여 코드 작성이 매우 쉬워지고 있습니다. 이로인해 많은 사람들이 바이브 코딩, 딸깍 코딩이라는 용어르 사용하고 있습니다. 인공지능의 퍼포먼스는 어마어마 합니다. 하지만 공통적으로 나오는 의견이 있는데 일정 수준 이상의 어플리케이션 제작은 어렵다입니다. 물론 이 부분은 저도 동의하는 부분입니다. 그럼에도 불구하고 개발자들은 어떻게 거대한 시스템에서 인공지능을 활용할까요? 그건 바로 비개발자와 개발자의 차이점이 코드이해의 여부입니다. 그렇.......",
      "link": "https://blog.naver.com/pjt3591oo/223840463308?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223840463308",
      "pubDate": "Sun, 20 Apr 2025 16:01:29 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[인공지능] 구글이 공개한 A2A를 이용하여 A2A Client 만들기",
      "description": "안녕하세요 멍개입니다. 지난 시간에 구글이 공개한 A2A를 이용하여 코드생성을 하는 A2A 서버를 만들어 보았습니다. https://blog.naver.com/pjt3591oo/223840293717 이번 시간은 A2A 서버에게 작업을 요청하는 A2A 클라이언트를 만들어보겠습니다. · 프로젝트 준비 먼저 A2A 코드를 가져옵니다. · 필요한 모듈 임포트 __main__.py를 만든러 준 후 다음과 같이 모듈을 임포트 합니다. 여기서는 우리가 앞에서 만든 code_eval A2A Server를 이용하기 위해 http://localhost:10004을 사용합니다. A2ACardResolver는 a2a 서버 정보를 입력 받습니다. get_agent_card()를 호출하면 a2a server에게 /.well-known/agent.json을 호출하여 AgentCard 정.......",
      "link": "https://blog.naver.com/pjt3591oo/223841062597?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223841062597",
      "pubDate": "Mon, 21 Apr 2025 08:38:39 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[인공지능] 인공지능이 만든 쇼핑몰 - 작업시간 1시간 이내",
      "description": "안녕하세요 멍개입니다. 이번 시간에는 인공지능을 이용하여 소핑몰 만들어보기를 도전해보겠습니다. 개발 스택은 다음과 같습니다. nextjs tailwind postgres(with prisma) FSD design pattern 로컬 환경에서는 디비를 docker위에 올릴것이라 docker-compose.yaml까지 만들어달라고 했습니다. https://github.com/pjt3591oo/shop-with-ai https://shop-with-ai.vercel.app/ 인공지능이 작업한 내용은 다음과 같습니다. https://github.com/pjt3591oo/shop-with-ai/commit/350adfa9c33cb410f78c275b4aa479362ad63022 https://github.com/pjt3591oo/shop-with-ai/commit/94dbc79c510dd3310239b08ca3e0dfc7bd822cd8 https://github.com/pjt3591oo/s.......",
      "link": "https://blog.naver.com/pjt3591oo/223846968410?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223846968410",
      "pubDate": "Sat, 26 Apr 2025 14:14:22 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[인공지능] 인공지능이 만든 카카오 퍼블리싱 - 작업시간 10분",
      "description": "안녕하세요 멍개입니다. 저는 개발을 업으로 일한지 10년이 되었습니다. 제가 개발하면서 가장 어려운 부분이 바로 퍼블리싱입니다. 아무래도 메인 포지션이 벡엔드이다 보니 css 다루는데 어려움이 많습니다. 하지만 요즘같이 AI가 코드를 작성하는 상황에서 AI가 어느정도 수준으로 퍼블리싱 작업을 수행하 수 있는지 테스트를 해보았습니다. https://kakao-publish-with-ai.vercel.app/ 작성된 코드는 다음과 같습니다. https://github.com/pjt3591oo/kakao-publish-with-ai 요즘 인공지능을 활용하여 이것저것 만들고 있는데 저의 목적은 AI의 활용 능력치를 올리기 위함입니다. 멍개의 AI 활용시 관점 포인트는 다음과 같습니다. 프로젝트 셋.......",
      "link": "https://blog.naver.com/pjt3591oo/223848944910?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223848944910",
      "pubDate": "Mon, 28 Apr 2025 17:00:18 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    },
    {
      "title": "[보안] 최악의 유출 사태 SKT의 USIM 정보 탈취",
      "description": "안녕하세요 멍개입니다. 오늘은 최근에 발생된 SKT의 USIM 정보가 탈취된 사건을 다뤄보겠습니다. 먼저 도대체 USIM이 머길래 왜 이렇게 떠들썩한걸까요? · USIM이 먼데? 먼저 USIM이 무엇인지부터 다뤄보겠습니다. USIM은 내부적으로 인증키를 가지고 있습니다. 개발자라면 private key가 비개발자라면 계좌 비밀번호와 같은 정보라고 이해하면 되겠습니다. SKT는 HSS(홈 가입자 서버)라고 하는 서버가 존재합니다. 이 서버는 가입자 정보와 네트워크 접속 시 인증을 수행합니다. HSS는 앞의 이미지처럼 다음과 같은 정보를 가지고 있습니다. SIM 시리얼 번호: 유심 카드 자체의 번호 IMSI: 가입자 식별 번호 IMEI: 휴대폰 기계 자체의 번호 USI....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA0MjlfMjk3/MDAxNzQ1OTAwNzE5OTI0.IicQLhKN87X6CMvocKgzMmqNPObhzkl9lA_2kUNQg7Yg.3PtzvkJqbUC36JwPNz-pO6UAAABsmaonT22d1bT6RrYg.PNG/Screenshot_2025-04-29_at_13.25.10.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223849911437?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223849911437",
      "pubDate": "Tue, 29 Apr 2025 14:10:34 +0900",
      "author": "pjt3591oo",
      "category": "보안"
    },
    {
      "title": "resume를 만들어 보았다",
      "description": "https://pjt3591oo.github.io/resume/",
      "link": "https://blog.naver.com/pjt3591oo/223851453360?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223851453360",
      "pubDate": "Wed, 30 Apr 2025 19:22:53 +0900",
      "author": "pjt3591oo",
      "category": "일상..."
    },
    {
      "title": "[보안] SKT 해킹에 사용된 bpfdoor를 이용한 해킹을 알아보자",
      "description": "안녕하세요 멍개입니다. 먼저, 지난 시간에는 이번 SKT 해킹이 왜 위험한지 다뤄보았습니다. https://blog.naver.com/pjt3591oo/223849911437 이번 시간에는 SKT 해킹에 사용된 백도어 프로그램인 BPFDoor가 어떻게 동작하길래 수 많은 데이터가 탈취되었는지 알아보겠습니다. 결과론 적으로 BPFDoor는 백도어 프로그램이며 특정 네트워크 패킷이 발생되면 트리거가 되어 해커의 PC로 접속하여 shell 권한을 넘기게 됩니다. 이를 리버스 쉘이라고 합니다. 이번 포스트에서는 BPFDoor를 실행시켜 시스템의 쉘을 획득하는 과정을 포함합니다. 이번 과정은 BPFDoor의 위험성을 이해하고자 정리된 내용이며 해킹을 장려하기 위한 글이 아님을 명시합....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MDFfMjYw/MDAxNzQ2MDY5NzA0NjY5.beIuXyHoK-Tok-cZAMhn_ELYEBCU9wwVSyW7MuJVTVcg.Y_AcMPzK2-A4_dpX_LTgP-3oqknqExYK5M5idNBklScg.PNG/Screenshot_2025-05-01_at_12.21.41.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223852182276?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223852182276",
      "pubDate": "Thu, 01 May 2025 13:52:16 +0900",
      "author": "pjt3591oo",
      "category": "보안"
    },
    {
      "title": "[langchain] 1편 - langchain 시작하기",
      "description": "안녕하세요 멍개입니다. 이번 시간부터는 langchain을 다뤄보고자 합니다. ● langchain이 필요한 이유 ChatGPT와 같은 대규모 언어 모델(Large Language Models, LLM)이 등장하면서 우리는 이전에는 상상하기 어려웠던 놀라운 경험들을 하고 있습니다. 인간과 자연스럽게 대화하고, 글을 쓰고, 코드를 짜는 등 LLM은 다양한 분야에서 혁신적인 변화를 이끌고 있습니다. 이러한 강력한 LLM을 기반으로 더 복잡하고 유용한 애플리케이션을 만들고자 하는 요구는 당연히 커지고 있습니다. 단순한 챗봇을 넘어, 우리의 데이터를 이해하고, 다른 서비스와 연동하며, 스스로 판단하여 작업을 수행하는 인공지능 애플리케이션을 만들고자 하는 수요가 매.......",
      "link": "https://blog.naver.com/pjt3591oo/223855896217?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223855896217",
      "pubDate": "Mon, 05 May 2025 14:09:31 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langchain] 2편 - langchain 기본활용(Chains, LCEL)",
      "description": "안녕하세요 멍개입니다. 이번 포스트는 지난 포스트에는 LangChain의 기본 구성 요소를 다뤘습니다. LangChain의 기본 요소인 Model, Promp, Output Parser을 여러 형태로 조합할 수 있는데 이를 워크플로우나 Chain이라고 합니다. 또한 Chain을 만드는 강력한 방법중 하나가 LCEL입니다. ● Chain: 워크플로우를 만들어보자 LLM은 단순하게 한 번 호출되고 끝나지 않습니다. 예를 들면 다음과 같은 시나리오가 있을 수 있습니다. 또한 이들은 순차적 또는 병렬적으로 이루어질 수 있습니다. · Chain을 만드는 방법 - 과거의 방식 먼저, 고전적으로 Chain을 만드는 방법을 다룹니다. 고전적으로 만드는 방법은 LangChain에서 제공하는 LLMChain을.......",
      "link": "https://blog.naver.com/pjt3591oo/223855958013?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223855958013",
      "pubDate": "Mon, 05 May 2025 15:37:05 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langchain] 3편 - LLM 모델로는 부족하다 외부 데이터를 활용한 RAG",
      "description": "안녕하세요 멍개입니다. 1편과 2편까지 LangChain의 핵심 요소인 Model, Prompt, Output Parser를 이용하여 워크플로우를 위한 Chain를 구축하고 이를 위해 LCEL를 다뤄보았습니다. 하지만 LLM의 한계중 하나는 LLM 모델이 학습되고 새로운 정보가 나오거나 특정 회사에 있는 문서 또는 개인 문서를 알지 못합니다. 만약 최신 정보를 참조하거나 회사의 내부 문서, 개인 노트 등을 기반으로 답변하게 할 수 있는 방법론이 RAG(Retrieval Augmented Generation)입니다. RAG는 사용자로부터 쿼리가 발생되면 쿼리를 기반으로 관련 정보를 먼저 검색합니다. 이 정보를 기반으로 LLM에게 보강하라고 요청합니다. 정리하면 RAG는 지식의 한계, 확각, 접....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MDVfMzMg/MDAxNzQ2NDM0OTI1OTY0.KlvcECWuqD2DebNIJPU7i8GvTqx5rlDUbV0PgUzcOacg.aBnoPGr2FlqFeiBk6Hkpbj9KARK9vTm5H54s0oMwpt0g.JPEG/IMG_3880.jpeg?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223856606236?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223856606236",
      "pubDate": "Tue, 06 May 2025 10:49:51 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langchain] 4편 - Memory와 Agent",
      "description": "안녕하세요 멍개입니다. 이번 시간에는 자연스러운 대화의 흐름을 위해 챗봇이 맥락 유지를 할 수 있는 Memory와 스스로 생각하고 행동(tool)을 수행할 수 있는 Agent를 다뤄보겠습니다. ● Memory LangChain은 RunnableWithMessageHistory를 통해 대화 내용을 기억하여 대화의 맥락을 유지할 수 있습니다. 또한 맥락 유지를 통해 자연스러운 대화를 이어가고 개인화된 데이터를 제공할 수 있습니다. LangChain의 Memory의 작동원리는 Chain 실행 전에 Memory를 통해 이전 대화 기록을 불러옵니다. 불러온 대화 목록을 프롬프트 템픗릿의 지정된 변수(예: {history})에 주입합니다. 현재 입력과 이전 대화 기록이 포함된 프롬프트를 LLM에 전달하.......",
      "link": "https://blog.naver.com/pjt3591oo/223856689557?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223856689557",
      "pubDate": "Tue, 06 May 2025 12:42:44 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langchain] 5편 - 개발 생산성 및 배포",
      "description": "안녕하세요 멍개입니다. 1편부터 4편까지는 LangChain의 기본부터 RAG, Agent 구축하는 방법을 다뤄보았습니다. 이번 편에서는 LangChain 어플리케이션 개발의 도움을 주는 LangSmith와 배포를 도와주는 LangServe를 다뤄보도록 하겠습니다. ● LangSmith LangSmith는 LangChain 어플리케이션의 개발, 디버깅, 추적, 평가 및 모니터링을 위해 설계된 플랫폼입니다. LangSmith는 복잡성, 비결정성, 가시성 부족, 디버깅 어려움, 평가 및 개선의 어려움을 해결하기 위해 사용됩니다. · LangSmith 키 발급 LangSmith를 사용하기 위해 먼저 API 키를 발급받아야 됩니다. https://smith.langchain.com/ 로그인 후 좌측의 setting에서 API키를 발급받을....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MDZfMTYw/MDAxNzQ2NTE3NzMzOTM1.hZM-Fcoqg7BfvnNmibr5ki_3-lnCwaAjIVXMxpoaDQ0g.EFsoQJuTqPYmwWBqICNf_-tSy2AKvcFfSK_fHR8uPd0g.PNG/Screenshot_2025-05-06_at_16.48.46.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223857078379?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223857078379",
      "pubDate": "Tue, 06 May 2025 20:47:53 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langchain] 6편 - 효율적인 LLM 사용전략 & 평가",
      "description": "안녕하세요 멍개입니다. 앞서서 1편부터 5편까지 통해 LangChain의 모든 요소를 다뤄보았습니다. 이번 시간에서는 LangChain을 통해 큰 문서를 다루는 방법과 프롬프트를 통해 모델의 셩능을 향상하는 방법 그리고 LangChain으로 만든 LLM 애플리케이션을 평가하는 방법을 알아보겠습니다. ● 문서요약 전략 우리가 LLM 애플리케이션을 만들기 위해 긴 문서, 보고서, 논문, 기사 등 다양한 형태의 문서를 다루게 되는데 이때 내용을 압축하기 위해 요약을 수행합니다. 문서를 압축하는 이유는 LLM 모델의 토큰 제한이 존재하기 때문입니다. 요약을 완료하면 LLM의 context window보다 작아야합니다. ChainChain에서는 load_summarize_chain을 이.......",
      "link": "https://blog.naver.com/pjt3591oo/223857452000?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223857452000",
      "pubDate": "Wed, 07 May 2025 08:15:08 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langgraph] 1편 - langgraph 소개 및 기본개념",
      "description": "안녕하세요 멍개입니다. 지난 시간에 langchain을 다뤄보았습니다. 이번 포스트부터는 langgraph를 다뤄보도록 하겠습니다. ● 선형 Chain을 넘어 복잡한 흐름을 제어하는 langgraph LangChain에서는 Prompt, Model, Output Parser와 같이 Runnable 객체를 파이프(|)를 이용하여 Chain을 구성할 수 있었습니다. 하지만 LLM 애플리케이션이 복잡해지기 시작하면 단순한 선형 연결만으로 부족한을 느끼게 됩니다. · LangGraph가 필요할까? LLM 애플리이션을 만들다보면 다음과 같은 상황이 올 수 있습니다. 첫 번째 LLM이 스스로 판단해서 다음 단계를 결정하게 만들고 싶은경우(LCEL만으로 부족할 때) 두 번째 여러 단계를 거치면서 정보(상태)를.......",
      "link": "https://blog.naver.com/pjt3591oo/223861729229?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223861729229",
      "pubDate": "Sun, 11 May 2025 07:55:21 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langgraph] 2편 - 상태와 조건부 엣지",
      "description": "안녕하세요 멍개입니다. 지난 1편에서는 LangGraph의 핵심 요소인 states, edges, nodes를 다뤄보았습니다. 이번편에서는 state와 edges를 조금 더 자세히 다뤄보겠습니다. ● LangGraph의 상태 LangGraph에서 상태 정의를 위해 TypeDict를 이용합니다. 상태를 정의하는 것은 LangGraph의 워크플로우 전체의 정보 흐름을 설계하는 과정입니다. 여기서 핵심은 agent_scratchpad입니다. 해당 상태의 타입은 Annotated[Sequence[BaseMessage], operator.add]로 정의되어있습니다. BaseMessage는 LangChain에서 HumanMessage, AIMessage 등을 의하는 메시지 객체입니다. operator.add는 해당 키에 대한 상태 업데이트가 발생할 때 기존 값과 새로운 값....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MTFfMTY5/MDAxNzQ2OTIwMTQwOTgz.P3kT0fib2U58sdhuRiO3Tw63ofuZAI8fClG1Zm496LYg.VwKw9hFfUDejiWdX5UujpDCjPiIj42lqgcI8llpOz5og.PNG/Screenshot_2025-05-11_at_08.35.16.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223861746764?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223861746764",
      "pubDate": "Sun, 11 May 2025 08:39:52 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langgraph] 3편 - 순환과 에이전트 그리고 HITL",
      "description": "안녕하세요 멍개입니다. 지난 시간에 상태와 조건부 엣지에 대해서 다뤄보았습니다. 이번 포스트에서는 조건부 엣지를 이용하여 수환 구조를 구축하고 에이전트를 다뤄보겠습니다. ● 순환(cycle) 구조 순환 구조를 위해 조건부 엣지를 이용합니다. 순환 구조는 다음 시나리오에서 필수적입니다. 에이전트의 ReAct 루프: 생각 -> 행동 -> 관찰 -> 다시생각 -> 행동 하는 에이전트의 핵심 작동 방식을 구현합니다. 자가 수정 / 반영 (self-Correction/Reflection): LLM이 생성한 결과물을 스스로 평가하고 만족스럽지 않으면 다시 생성하거나 수정하는 과정을 반복합니다. 점진적 정보 수집: 필요한 정보가 충분히 모일 때까지 검색이.......",
      "link": "https://blog.naver.com/pjt3591oo/223861843816?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223861843816",
      "pubDate": "Sun, 11 May 2025 11:33:30 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langgraph] 4편 - checkpoint를 이용한 히스토리 관리",
      "description": "안녕하세요 멍개입니다. 1편부터 3편동안 LangGraph의 구성요소와 LangGraph를 이용하여 Agent를 만드는 방법을 알아보았습니다. 이번 시간은 LangGraph에서 상태(기록)을 저장하고 관리하는 checkpoint에 대해서 알아보겠습니다. checkpoint의 핵심 기능은 대화 컨텍스트 유지입니다. · checkpoint 없을 때 · checkpoint 있을 때 checkpoint는 graph를 빌드할 때 checkepointer를 전달하면 됩니다. · thread_id로 관리되는 체크포인트 LangGraph에서 checkpoint는 thread_id 마다의 state를 관리합니다. 이는 get_state를 통해 읽거나 update_state를 통해 수정할 수 있습니다. · functional api 기반의 체크포인트 설정 · 체크포인트 삭제 ● 체....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MTFfMjYx/MDAxNzQ2OTQyNTc3NDUw.Sa3LixUSBZeymMp2nNk7WUtmrS6bJMoSeFDmBsllZs4g.L9xN8bNFdGp8GEQv_VY-09tWGK4GbRkEypVchLJ0z2Yg.PNG/Screenshot_2025-05-11_at_14.49.25.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223861993313?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223861993313",
      "pubDate": "Sun, 11 May 2025 15:20:33 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[langgraph] 5편 - LangSmith를 이용하여 디버깅하기",
      "description": "안녕하세요 멍개입니다. 이번시간은 LangSmith를 이용하여 LangGraph 애플리케이션 개발하는 방법을 다뤄보겠습니다. LangSmith를 사용하는 방법은 LangChain에서 동일하므로 LangSmith를 셋팅하는 방법을 모른다면 이전에 작성한 블로그를 참고하는 것을 권장합니다. https://blog.naver.com/pjt3591oo/223857078379 · LangGraph 애플리키이션 코드 LangGraph를 이용하여 개발을 진행한다면 다음과 같이 graph를 구성할 수 있을겁니다. 이렇게 graph를 만들었다면 테스트를 위해 다음과 같이 코드를 작성할 수 있을겁니다. · LangSmith 연동 LangSmith는 LangGraph로 만들어진 애플리케이션과 연동하여 테스트를 할 수 있는 인터페이스를 제공합....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MTNfNDMg/MDAxNzQ3MTE5MjAwMzA1.K46aqle1ZjTGiGyJK_SfgSEUL-BBtn1_TRK1y3ku47og.Ytgl_2q7MSH8ZLDxFx_LkRPUtJ9s2IaCb7Q29EBY1_sg.PNG/Screenshot_2025-05-13_at_15.53.15.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223864327562?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223864327562",
      "pubDate": "Tue, 13 May 2025 16:13:50 +0900",
      "author": "pjt3591oo",
      "category": "Python"
    },
    {
      "title": "[Crawler] 네이버 블로그 크롤러",
      "description": "안녕하세요 멍개입니다. · 게시글 목록 저장 게시글 목록을 가져온 후 blog-rag-data/post_list.json으로 저장합니다. · 포스트 데이터 가져오기 앞에서 저장한 blog-rag-data/post_list.json을 읽어서 각각의 포스트 정보를 가져옵니다. html에서 id가 post-view[blog_id]로 지정된 dom의 텍스트를 가져옵니다.",
      "link": "https://blog.naver.com/pjt3591oo/223868646194?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223868646194",
      "pubDate": "Sat, 17 May 2025 13:50:00 +0900",
      "author": "pjt3591oo",
      "category": "cralwer"
    },
    {
      "title": "[calude] claude 4.0 출시",
      "description": "안녕하세요 멍개입니다. 클로드 4.0이 출시되었습니다. 저는 보통 새로운 모델이 나오면 테스트를 위해 몇몇 제작을 요청합니다. https://github.com/pjt3591oo/calude4-fund https://pjt3591oo.github.io/calude4-fund 두 번째로는 채팅 어플리케이션 제작을 요청했습니다. https://github.com/pjt3591oo/calude4-chat <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MjNfMTA3/MDAxNzQ3OTU0Njg4Mzg1.FMhHBJAtfikUxH1RxH5uky14GCq-D0FSG705t0LsnAUg.0onvm6l14DN1JhKqXO-ks83qc2_97K3ym-hgeiDtn6cg.PNG/Screenshot_2025-05-23_at_07.57.54.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223874917351?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223874917351",
      "pubDate": "Fri, 23 May 2025 08:09:49 +0900",
      "author": "pjt3591oo",
      "category": "인공지능"
    },
    {
      "title": "[stitch] 이제는 디자인도 AI가 해준다",
      "description": "안녕하세요 멍개입니다. 최근 구글이 또 엄청난 걸 공개했습니다. 물론 2025년 05월 23일 기준으로 베타서비스 입니다. 이름하여 디자인을 해주는 AI 도구 'stitch' 입니다. https://stitch.withgoogle.com/ 저는 해당 서비스에게 펀딩 어플리케이션 제작을 위한 디자인을 요청해보았습니다. 여기서 각가의 화면의 상단 부분에 Edit와 Figma가 보입니다. Edit을 통해 Stitch에게 해당 화면을 기반으로 디자인 수정 요청을 수행할 수 있습니다. Edit을 누르면 다음과 같이 채팅 입력창에 해당 화면이 업로드된 것 처럼 표시됩니다. 해당 화면이 어떻게 변경되었는지 독립적으로 표시됩니다. stitch의 경우 응답된 디자인 부분을 누르면....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA1MjNfMTE3/MDAxNzQ3OTgyNTM3NTYx.cnbytclB1Bmzv6jxTca-NwWgH85C1ghIxij0pf7ukXwg.iwFb5rdxRsx-gfcE7ACbx1pEfZhWhP7rotpybIH1JtYg.PNG/Screenshot_2025-05-23_at_15.42.00.png?type=s3\" />",
      "link": "https://blog.naver.com/pjt3591oo/223875409166?fromRss=true&trackingCode=rss",
      "guid": "https://blog.naver.com/pjt3591oo/223875409166",
      "pubDate": "Fri, 23 May 2025 15:51:12 +0900",
      "author": "pjt3591oo",
      "category": "인공지능 활용"
    }
  ]
}